// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetZoneNetGWsOKCode is the HTTP code returned for type GetZoneNetGWsOK
const GetZoneNetGWsOKCode int = 200

/*
GetZoneNetGWsOK Returns an array of network gateway IDs.

swagger:response getZoneNetGWsOK
*/
type GetZoneNetGWsOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetZoneNetGWsOK creates GetZoneNetGWsOK with default headers values
func NewGetZoneNetGWsOK() *GetZoneNetGWsOK {

	return &GetZoneNetGWsOK{}
}

// WithPayload adds the payload to the get zone net g ws o k response
func (o *GetZoneNetGWsOK) WithPayload(payload []string) *GetZoneNetGWsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get zone net g ws o k response
func (o *GetZoneNetGWsOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetZoneNetGWsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetZoneNetGWsNotFoundCode is the HTTP code returned for type GetZoneNetGWsNotFound
const GetZoneNetGWsNotFoundCode int = 404

/*
GetZoneNetGWsNotFound Invalid zone ID was provided.

swagger:response getZoneNetGWsNotFound
*/
type GetZoneNetGWsNotFound struct {
}

// NewGetZoneNetGWsNotFound creates GetZoneNetGWsNotFound with default headers values
func NewGetZoneNetGWsNotFound() *GetZoneNetGWsNotFound {

	return &GetZoneNetGWsNotFound{}
}

// WriteResponse to the client
func (o *GetZoneNetGWsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
