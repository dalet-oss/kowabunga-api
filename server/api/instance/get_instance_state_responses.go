// Code generated by go-swagger; DO NOT EDIT.

package instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dalet-oss/kowabunga-api/models"
)

// GetInstanceStateOKCode is the HTTP code returned for type GetInstanceStateOK
const GetInstanceStateOKCode int = 200

/*
GetInstanceStateOK Returns the virtual machine state object.

swagger:response getInstanceStateOK
*/
type GetInstanceStateOK struct {

	/*
	  In: Body
	*/
	Payload *models.InstanceState `json:"body,omitempty"`
}

// NewGetInstanceStateOK creates GetInstanceStateOK with default headers values
func NewGetInstanceStateOK() *GetInstanceStateOK {

	return &GetInstanceStateOK{}
}

// WithPayload adds the payload to the get instance state o k response
func (o *GetInstanceStateOK) WithPayload(payload *models.InstanceState) *GetInstanceStateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get instance state o k response
func (o *GetInstanceStateOK) SetPayload(payload *models.InstanceState) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInstanceStateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInstanceStateNotFoundCode is the HTTP code returned for type GetInstanceStateNotFound
const GetInstanceStateNotFoundCode int = 404

/*
GetInstanceStateNotFound Invalid instance ID was provided.

swagger:response getInstanceStateNotFound
*/
type GetInstanceStateNotFound struct {
}

// NewGetInstanceStateNotFound creates GetInstanceStateNotFound with default headers values
func NewGetInstanceStateNotFound() *GetInstanceStateNotFound {

	return &GetInstanceStateNotFound{}
}

// WriteResponse to the client
func (o *GetInstanceStateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
