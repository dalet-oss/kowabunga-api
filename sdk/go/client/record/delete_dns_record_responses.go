// Code generated by go-swagger; DO NOT EDIT.

package record

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteDNSRecordReader is a Reader for the DeleteDNSRecord structure.
type DeleteDNSRecordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDNSRecordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDNSRecordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteDNSRecordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDNSRecordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /record/{recordId}] DeleteDnsRecord", response, response.Code())
	}
}

// NewDeleteDNSRecordOK creates a DeleteDNSRecordOK with default headers values
func NewDeleteDNSRecordOK() *DeleteDNSRecordOK {
	return &DeleteDNSRecordOK{}
}

/*
DeleteDNSRecordOK describes a response with status code 200, with default header values.

The DNS record has been successfully removed.
*/
type DeleteDNSRecordOK struct {
}

// IsSuccess returns true when this delete Dns record o k response has a 2xx status code
func (o *DeleteDNSRecordOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete Dns record o k response has a 3xx status code
func (o *DeleteDNSRecordOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Dns record o k response has a 4xx status code
func (o *DeleteDNSRecordOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Dns record o k response has a 5xx status code
func (o *DeleteDNSRecordOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Dns record o k response a status code equal to that given
func (o *DeleteDNSRecordOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete Dns record o k response
func (o *DeleteDNSRecordOK) Code() int {
	return 200
}

func (o *DeleteDNSRecordOK) Error() string {
	return fmt.Sprintf("[DELETE /record/{recordId}][%d] deleteDnsRecordOK ", 200)
}

func (o *DeleteDNSRecordOK) String() string {
	return fmt.Sprintf("[DELETE /record/{recordId}][%d] deleteDnsRecordOK ", 200)
}

func (o *DeleteDNSRecordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDNSRecordNotFound creates a DeleteDNSRecordNotFound with default headers values
func NewDeleteDNSRecordNotFound() *DeleteDNSRecordNotFound {
	return &DeleteDNSRecordNotFound{}
}

/*
DeleteDNSRecordNotFound describes a response with status code 404, with default header values.

Invalid DNS record ID was provided.
*/
type DeleteDNSRecordNotFound struct {
}

// IsSuccess returns true when this delete Dns record not found response has a 2xx status code
func (o *DeleteDNSRecordNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Dns record not found response has a 3xx status code
func (o *DeleteDNSRecordNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Dns record not found response has a 4xx status code
func (o *DeleteDNSRecordNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Dns record not found response has a 5xx status code
func (o *DeleteDNSRecordNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Dns record not found response a status code equal to that given
func (o *DeleteDNSRecordNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete Dns record not found response
func (o *DeleteDNSRecordNotFound) Code() int {
	return 404
}

func (o *DeleteDNSRecordNotFound) Error() string {
	return fmt.Sprintf("[DELETE /record/{recordId}][%d] deleteDnsRecordNotFound ", 404)
}

func (o *DeleteDNSRecordNotFound) String() string {
	return fmt.Sprintf("[DELETE /record/{recordId}][%d] deleteDnsRecordNotFound ", 404)
}

func (o *DeleteDNSRecordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDNSRecordInternalServerError creates a DeleteDNSRecordInternalServerError with default headers values
func NewDeleteDNSRecordInternalServerError() *DeleteDNSRecordInternalServerError {
	return &DeleteDNSRecordInternalServerError{}
}

/*
DeleteDNSRecordInternalServerError describes a response with status code 500, with default header values.

Unable to delete DNS record.
*/
type DeleteDNSRecordInternalServerError struct {
}

// IsSuccess returns true when this delete Dns record internal server error response has a 2xx status code
func (o *DeleteDNSRecordInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Dns record internal server error response has a 3xx status code
func (o *DeleteDNSRecordInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Dns record internal server error response has a 4xx status code
func (o *DeleteDNSRecordInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Dns record internal server error response has a 5xx status code
func (o *DeleteDNSRecordInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete Dns record internal server error response a status code equal to that given
func (o *DeleteDNSRecordInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete Dns record internal server error response
func (o *DeleteDNSRecordInternalServerError) Code() int {
	return 500
}

func (o *DeleteDNSRecordInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /record/{recordId}][%d] deleteDnsRecordInternalServerError ", 500)
}

func (o *DeleteDNSRecordInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /record/{recordId}][%d] deleteDnsRecordInternalServerError ", 500)
}

func (o *DeleteDNSRecordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
