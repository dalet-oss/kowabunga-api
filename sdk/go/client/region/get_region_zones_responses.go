// Code generated by go-swagger; DO NOT EDIT.

package region

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetRegionZonesReader is a Reader for the GetRegionZones structure.
type GetRegionZonesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegionZonesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRegionZonesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetRegionZonesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /region/{regionId}/zones] GetRegionZones", response, response.Code())
	}
}

// NewGetRegionZonesOK creates a GetRegionZonesOK with default headers values
func NewGetRegionZonesOK() *GetRegionZonesOK {
	return &GetRegionZonesOK{}
}

/*
GetRegionZonesOK describes a response with status code 200, with default header values.

Returns an array of availability zone IDs.
*/
type GetRegionZonesOK struct {
	Payload []string
}

// IsSuccess returns true when this get region zones o k response has a 2xx status code
func (o *GetRegionZonesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get region zones o k response has a 3xx status code
func (o *GetRegionZonesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get region zones o k response has a 4xx status code
func (o *GetRegionZonesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get region zones o k response has a 5xx status code
func (o *GetRegionZonesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get region zones o k response a status code equal to that given
func (o *GetRegionZonesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get region zones o k response
func (o *GetRegionZonesOK) Code() int {
	return 200
}

func (o *GetRegionZonesOK) Error() string {
	return fmt.Sprintf("[GET /region/{regionId}/zones][%d] getRegionZonesOK  %+v", 200, o.Payload)
}

func (o *GetRegionZonesOK) String() string {
	return fmt.Sprintf("[GET /region/{regionId}/zones][%d] getRegionZonesOK  %+v", 200, o.Payload)
}

func (o *GetRegionZonesOK) GetPayload() []string {
	return o.Payload
}

func (o *GetRegionZonesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegionZonesNotFound creates a GetRegionZonesNotFound with default headers values
func NewGetRegionZonesNotFound() *GetRegionZonesNotFound {
	return &GetRegionZonesNotFound{}
}

/*
GetRegionZonesNotFound describes a response with status code 404, with default header values.

Invalid region ID was provided.
*/
type GetRegionZonesNotFound struct {
}

// IsSuccess returns true when this get region zones not found response has a 2xx status code
func (o *GetRegionZonesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get region zones not found response has a 3xx status code
func (o *GetRegionZonesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get region zones not found response has a 4xx status code
func (o *GetRegionZonesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get region zones not found response has a 5xx status code
func (o *GetRegionZonesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get region zones not found response a status code equal to that given
func (o *GetRegionZonesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get region zones not found response
func (o *GetRegionZonesNotFound) Code() int {
	return 404
}

func (o *GetRegionZonesNotFound) Error() string {
	return fmt.Sprintf("[GET /region/{regionId}/zones][%d] getRegionZonesNotFound ", 404)
}

func (o *GetRegionZonesNotFound) String() string {
	return fmt.Sprintf("[GET /region/{regionId}/zones][%d] getRegionZonesNotFound ", 404)
}

func (o *GetRegionZonesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
