// Code generated by go-swagger; DO NOT EDIT.

package subnet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/sdk/go/models"
)

// GetSubnetReader is a Reader for the GetSubnet structure.
type GetSubnetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubnetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubnetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubnetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /subnet/{subnetId}] GetSubnet", response, response.Code())
	}
}

// NewGetSubnetOK creates a GetSubnetOK with default headers values
func NewGetSubnetOK() *GetSubnetOK {
	return &GetSubnetOK{}
}

/*
GetSubnetOK describes a response with status code 200, with default header values.

Returns the subnet object.
*/
type GetSubnetOK struct {
	Payload *models.Subnet
}

// IsSuccess returns true when this get subnet o k response has a 2xx status code
func (o *GetSubnetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get subnet o k response has a 3xx status code
func (o *GetSubnetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subnet o k response has a 4xx status code
func (o *GetSubnetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subnet o k response has a 5xx status code
func (o *GetSubnetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get subnet o k response a status code equal to that given
func (o *GetSubnetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get subnet o k response
func (o *GetSubnetOK) Code() int {
	return 200
}

func (o *GetSubnetOK) Error() string {
	return fmt.Sprintf("[GET /subnet/{subnetId}][%d] getSubnetOK  %+v", 200, o.Payload)
}

func (o *GetSubnetOK) String() string {
	return fmt.Sprintf("[GET /subnet/{subnetId}][%d] getSubnetOK  %+v", 200, o.Payload)
}

func (o *GetSubnetOK) GetPayload() *models.Subnet {
	return o.Payload
}

func (o *GetSubnetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subnet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubnetNotFound creates a GetSubnetNotFound with default headers values
func NewGetSubnetNotFound() *GetSubnetNotFound {
	return &GetSubnetNotFound{}
}

/*
GetSubnetNotFound describes a response with status code 404, with default header values.

Invalid subnet ID was provided.
*/
type GetSubnetNotFound struct {
}

// IsSuccess returns true when this get subnet not found response has a 2xx status code
func (o *GetSubnetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subnet not found response has a 3xx status code
func (o *GetSubnetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subnet not found response has a 4xx status code
func (o *GetSubnetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subnet not found response has a 5xx status code
func (o *GetSubnetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get subnet not found response a status code equal to that given
func (o *GetSubnetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get subnet not found response
func (o *GetSubnetNotFound) Code() int {
	return 404
}

func (o *GetSubnetNotFound) Error() string {
	return fmt.Sprintf("[GET /subnet/{subnetId}][%d] getSubnetNotFound ", 404)
}

func (o *GetSubnetNotFound) String() string {
	return fmt.Sprintf("[GET /subnet/{subnetId}][%d] getSubnetNotFound ", 404)
}

func (o *GetSubnetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
