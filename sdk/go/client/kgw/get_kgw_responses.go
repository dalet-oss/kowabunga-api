// Code generated by go-swagger; DO NOT EDIT.

package kgw

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/sdk/go/models"
)

// GetKgwReader is a Reader for the GetKgw structure.
type GetKgwReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKgwReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKgwOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetKgwNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kgw/{kgwId}] GetKgw", response, response.Code())
	}
}

// NewGetKgwOK creates a GetKgwOK with default headers values
func NewGetKgwOK() *GetKgwOK {
	return &GetKgwOK{}
}

/*
GetKgwOK describes a response with status code 200, with default header values.

Returns an array for KGW IDs
*/
type GetKgwOK struct {
	Payload *models.KGW
}

// IsSuccess returns true when this get kgw o k response has a 2xx status code
func (o *GetKgwOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kgw o k response has a 3xx status code
func (o *GetKgwOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kgw o k response has a 4xx status code
func (o *GetKgwOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kgw o k response has a 5xx status code
func (o *GetKgwOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kgw o k response a status code equal to that given
func (o *GetKgwOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get kgw o k response
func (o *GetKgwOK) Code() int {
	return 200
}

func (o *GetKgwOK) Error() string {
	return fmt.Sprintf("[GET /kgw/{kgwId}][%d] getKgwOK  %+v", 200, o.Payload)
}

func (o *GetKgwOK) String() string {
	return fmt.Sprintf("[GET /kgw/{kgwId}][%d] getKgwOK  %+v", 200, o.Payload)
}

func (o *GetKgwOK) GetPayload() *models.KGW {
	return o.Payload
}

func (o *GetKgwOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KGW)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKgwNotFound creates a GetKgwNotFound with default headers values
func NewGetKgwNotFound() *GetKgwNotFound {
	return &GetKgwNotFound{}
}

/*
GetKgwNotFound describes a response with status code 404, with default header values.

Invalid KGW ID was provided.
*/
type GetKgwNotFound struct {
}

// IsSuccess returns true when this get kgw not found response has a 2xx status code
func (o *GetKgwNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kgw not found response has a 3xx status code
func (o *GetKgwNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kgw not found response has a 4xx status code
func (o *GetKgwNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kgw not found response has a 5xx status code
func (o *GetKgwNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kgw not found response a status code equal to that given
func (o *GetKgwNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get kgw not found response
func (o *GetKgwNotFound) Code() int {
	return 404
}

func (o *GetKgwNotFound) Error() string {
	return fmt.Sprintf("[GET /kgw/{kgwId}][%d] getKgwNotFound ", 404)
}

func (o *GetKgwNotFound) String() string {
	return fmt.Sprintf("[GET /kgw/{kgwId}][%d] getKgwNotFound ", 404)
}

func (o *GetKgwNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
