/*
Kowabunga API documentation

Kvm Orchestrator With A BUNch of Goods Added

API version: 0.41.0
Contact: csops@dalet.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the KGWFirewall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KGWFirewall{}

// KGWFirewall A KGW public firewall settings.
type KGWFirewall struct {
	// The KGW (Kowabunga Network Gateway) public firewall list of ingress rules. KGW default policy is to drop all incoming traffic, including ICMP. Specified ruleset will be explicitly accepted.
	Ingress []KGWFirewallIngressRule `json:"ingress,omitempty"`
	// The default public traffic egress policy.
	EgressPolicy *string `json:"egress_policy,omitempty"`
	// The KGW (Kowabunga Network Gateway) public firewall list of egress rules. KGW default policy is to accept all outgoing traffic, including ICMP. Specified ruleset will be explicitly dropped if egress_policy is set to accept, and explicitly accepted if egress policy is set to drop..
	Egress []KGWFirewallEgressRule `json:"egress,omitempty"`
}

// NewKGWFirewall instantiates a new KGWFirewall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKGWFirewall() *KGWFirewall {
	this := KGWFirewall{}
	var egressPolicy string = "accept"
	this.EgressPolicy = &egressPolicy
	return &this
}

// NewKGWFirewallWithDefaults instantiates a new KGWFirewall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKGWFirewallWithDefaults() *KGWFirewall {
	this := KGWFirewall{}
	var egressPolicy string = "accept"
	this.EgressPolicy = &egressPolicy
	return &this
}

// GetIngress returns the Ingress field value if set, zero value otherwise.
func (o *KGWFirewall) GetIngress() []KGWFirewallIngressRule {
	if o == nil || IsNil(o.Ingress) {
		var ret []KGWFirewallIngressRule
		return ret
	}
	return o.Ingress
}

// GetIngressOk returns a tuple with the Ingress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGWFirewall) GetIngressOk() ([]KGWFirewallIngressRule, bool) {
	if o == nil || IsNil(o.Ingress) {
		return nil, false
	}
	return o.Ingress, true
}

// HasIngress returns a boolean if a field has been set.
func (o *KGWFirewall) HasIngress() bool {
	if o != nil && !IsNil(o.Ingress) {
		return true
	}

	return false
}

// SetIngress gets a reference to the given []KGWFirewallIngressRule and assigns it to the Ingress field.
func (o *KGWFirewall) SetIngress(v []KGWFirewallIngressRule) {
	o.Ingress = v
}

// GetEgressPolicy returns the EgressPolicy field value if set, zero value otherwise.
func (o *KGWFirewall) GetEgressPolicy() string {
	if o == nil || IsNil(o.EgressPolicy) {
		var ret string
		return ret
	}
	return *o.EgressPolicy
}

// GetEgressPolicyOk returns a tuple with the EgressPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGWFirewall) GetEgressPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.EgressPolicy) {
		return nil, false
	}
	return o.EgressPolicy, true
}

// HasEgressPolicy returns a boolean if a field has been set.
func (o *KGWFirewall) HasEgressPolicy() bool {
	if o != nil && !IsNil(o.EgressPolicy) {
		return true
	}

	return false
}

// SetEgressPolicy gets a reference to the given string and assigns it to the EgressPolicy field.
func (o *KGWFirewall) SetEgressPolicy(v string) {
	o.EgressPolicy = &v
}

// GetEgress returns the Egress field value if set, zero value otherwise.
func (o *KGWFirewall) GetEgress() []KGWFirewallEgressRule {
	if o == nil || IsNil(o.Egress) {
		var ret []KGWFirewallEgressRule
		return ret
	}
	return o.Egress
}

// GetEgressOk returns a tuple with the Egress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGWFirewall) GetEgressOk() ([]KGWFirewallEgressRule, bool) {
	if o == nil || IsNil(o.Egress) {
		return nil, false
	}
	return o.Egress, true
}

// HasEgress returns a boolean if a field has been set.
func (o *KGWFirewall) HasEgress() bool {
	if o != nil && !IsNil(o.Egress) {
		return true
	}

	return false
}

// SetEgress gets a reference to the given []KGWFirewallEgressRule and assigns it to the Egress field.
func (o *KGWFirewall) SetEgress(v []KGWFirewallEgressRule) {
	o.Egress = v
}

func (o KGWFirewall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KGWFirewall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ingress) {
		toSerialize["ingress"] = o.Ingress
	}
	if !IsNil(o.EgressPolicy) {
		toSerialize["egress_policy"] = o.EgressPolicy
	}
	if !IsNil(o.Egress) {
		toSerialize["egress"] = o.Egress
	}
	return toSerialize, nil
}

type NullableKGWFirewall struct {
	value *KGWFirewall
	isSet bool
}

func (v NullableKGWFirewall) Get() *KGWFirewall {
	return v.value
}

func (v *NullableKGWFirewall) Set(val *KGWFirewall) {
	v.value = val
	v.isSet = true
}

func (v NullableKGWFirewall) IsSet() bool {
	return v.isSet
}

func (v *NullableKGWFirewall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKGWFirewall(val *KGWFirewall) *NullableKGWFirewall {
	return &NullableKGWFirewall{value: val, isSet: true}
}

func (v NullableKGWFirewall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKGWFirewall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


