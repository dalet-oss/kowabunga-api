// Code generated by go-swagger; DO NOT EDIT.

package netgw

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteNetGWReader is a Reader for the DeleteNetGW structure.
type DeleteNetGWReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNetGWReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNetGWOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteNetGWNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteNetGWConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNetGWInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /netgw/{netgwId}] DeleteNetGW", response, response.Code())
	}
}

// NewDeleteNetGWOK creates a DeleteNetGWOK with default headers values
func NewDeleteNetGWOK() *DeleteNetGWOK {
	return &DeleteNetGWOK{}
}

/*
DeleteNetGWOK describes a response with status code 200, with default header values.

The network gateway has been successfully removed.
*/
type DeleteNetGWOK struct {
}

// IsSuccess returns true when this delete net g w o k response has a 2xx status code
func (o *DeleteNetGWOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete net g w o k response has a 3xx status code
func (o *DeleteNetGWOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete net g w o k response has a 4xx status code
func (o *DeleteNetGWOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete net g w o k response has a 5xx status code
func (o *DeleteNetGWOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete net g w o k response a status code equal to that given
func (o *DeleteNetGWOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete net g w o k response
func (o *DeleteNetGWOK) Code() int {
	return 200
}

func (o *DeleteNetGWOK) Error() string {
	return fmt.Sprintf("[DELETE /netgw/{netgwId}][%d] deleteNetGWOK ", 200)
}

func (o *DeleteNetGWOK) String() string {
	return fmt.Sprintf("[DELETE /netgw/{netgwId}][%d] deleteNetGWOK ", 200)
}

func (o *DeleteNetGWOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetGWNotFound creates a DeleteNetGWNotFound with default headers values
func NewDeleteNetGWNotFound() *DeleteNetGWNotFound {
	return &DeleteNetGWNotFound{}
}

/*
DeleteNetGWNotFound describes a response with status code 404, with default header values.

Invalid network gateway ID was provided.
*/
type DeleteNetGWNotFound struct {
}

// IsSuccess returns true when this delete net g w not found response has a 2xx status code
func (o *DeleteNetGWNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete net g w not found response has a 3xx status code
func (o *DeleteNetGWNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete net g w not found response has a 4xx status code
func (o *DeleteNetGWNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete net g w not found response has a 5xx status code
func (o *DeleteNetGWNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete net g w not found response a status code equal to that given
func (o *DeleteNetGWNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete net g w not found response
func (o *DeleteNetGWNotFound) Code() int {
	return 404
}

func (o *DeleteNetGWNotFound) Error() string {
	return fmt.Sprintf("[DELETE /netgw/{netgwId}][%d] deleteNetGWNotFound ", 404)
}

func (o *DeleteNetGWNotFound) String() string {
	return fmt.Sprintf("[DELETE /netgw/{netgwId}][%d] deleteNetGWNotFound ", 404)
}

func (o *DeleteNetGWNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetGWConflict creates a DeleteNetGWConflict with default headers values
func NewDeleteNetGWConflict() *DeleteNetGWConflict {
	return &DeleteNetGWConflict{}
}

/*
DeleteNetGWConflict describes a response with status code 409, with default header values.

The network gateway is not empty or still being referenced.
*/
type DeleteNetGWConflict struct {
}

// IsSuccess returns true when this delete net g w conflict response has a 2xx status code
func (o *DeleteNetGWConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete net g w conflict response has a 3xx status code
func (o *DeleteNetGWConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete net g w conflict response has a 4xx status code
func (o *DeleteNetGWConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete net g w conflict response has a 5xx status code
func (o *DeleteNetGWConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete net g w conflict response a status code equal to that given
func (o *DeleteNetGWConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete net g w conflict response
func (o *DeleteNetGWConflict) Code() int {
	return 409
}

func (o *DeleteNetGWConflict) Error() string {
	return fmt.Sprintf("[DELETE /netgw/{netgwId}][%d] deleteNetGWConflict ", 409)
}

func (o *DeleteNetGWConflict) String() string {
	return fmt.Sprintf("[DELETE /netgw/{netgwId}][%d] deleteNetGWConflict ", 409)
}

func (o *DeleteNetGWConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetGWInternalServerError creates a DeleteNetGWInternalServerError with default headers values
func NewDeleteNetGWInternalServerError() *DeleteNetGWInternalServerError {
	return &DeleteNetGWInternalServerError{}
}

/*
DeleteNetGWInternalServerError describes a response with status code 500, with default header values.

Unable to delete network gateway.
*/
type DeleteNetGWInternalServerError struct {
}

// IsSuccess returns true when this delete net g w internal server error response has a 2xx status code
func (o *DeleteNetGWInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete net g w internal server error response has a 3xx status code
func (o *DeleteNetGWInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete net g w internal server error response has a 4xx status code
func (o *DeleteNetGWInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete net g w internal server error response has a 5xx status code
func (o *DeleteNetGWInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete net g w internal server error response a status code equal to that given
func (o *DeleteNetGWInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete net g w internal server error response
func (o *DeleteNetGWInternalServerError) Code() int {
	return 500
}

func (o *DeleteNetGWInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /netgw/{netgwId}][%d] deleteNetGWInternalServerError ", 500)
}

func (o *DeleteNetGWInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /netgw/{netgwId}][%d] deleteNetGWInternalServerError ", 500)
}

func (o *DeleteNetGWInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
