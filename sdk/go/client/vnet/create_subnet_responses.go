// Code generated by go-swagger; DO NOT EDIT.

package vnet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/sdk/go/models"
)

// CreateSubnetReader is a Reader for the CreateSubnet structure.
type CreateSubnetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSubnetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateSubnetCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSubnetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSubnetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateSubnetConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSubnetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /vnet/{vnetId}/subnet] CreateSubnet", response, response.Code())
	}
}

// NewCreateSubnetCreated creates a CreateSubnetCreated with default headers values
func NewCreateSubnetCreated() *CreateSubnetCreated {
	return &CreateSubnetCreated{}
}

/*
CreateSubnetCreated describes a response with status code 201, with default header values.

Returns the newly created subnet object.
*/
type CreateSubnetCreated struct {
	Payload *models.Subnet
}

// IsSuccess returns true when this create subnet created response has a 2xx status code
func (o *CreateSubnetCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create subnet created response has a 3xx status code
func (o *CreateSubnetCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subnet created response has a 4xx status code
func (o *CreateSubnetCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create subnet created response has a 5xx status code
func (o *CreateSubnetCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create subnet created response a status code equal to that given
func (o *CreateSubnetCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create subnet created response
func (o *CreateSubnetCreated) Code() int {
	return 201
}

func (o *CreateSubnetCreated) Error() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetCreated  %+v", 201, o.Payload)
}

func (o *CreateSubnetCreated) String() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetCreated  %+v", 201, o.Payload)
}

func (o *CreateSubnetCreated) GetPayload() *models.Subnet {
	return o.Payload
}

func (o *CreateSubnetCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subnet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSubnetBadRequest creates a CreateSubnetBadRequest with default headers values
func NewCreateSubnetBadRequest() *CreateSubnetBadRequest {
	return &CreateSubnetBadRequest{}
}

/*
CreateSubnetBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateSubnetBadRequest struct {
}

// IsSuccess returns true when this create subnet bad request response has a 2xx status code
func (o *CreateSubnetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create subnet bad request response has a 3xx status code
func (o *CreateSubnetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subnet bad request response has a 4xx status code
func (o *CreateSubnetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create subnet bad request response has a 5xx status code
func (o *CreateSubnetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create subnet bad request response a status code equal to that given
func (o *CreateSubnetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create subnet bad request response
func (o *CreateSubnetBadRequest) Code() int {
	return 400
}

func (o *CreateSubnetBadRequest) Error() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetBadRequest ", 400)
}

func (o *CreateSubnetBadRequest) String() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetBadRequest ", 400)
}

func (o *CreateSubnetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSubnetNotFound creates a CreateSubnetNotFound with default headers values
func NewCreateSubnetNotFound() *CreateSubnetNotFound {
	return &CreateSubnetNotFound{}
}

/*
CreateSubnetNotFound describes a response with status code 404, with default header values.

Invalid virtual network ID was provided.
*/
type CreateSubnetNotFound struct {
}

// IsSuccess returns true when this create subnet not found response has a 2xx status code
func (o *CreateSubnetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create subnet not found response has a 3xx status code
func (o *CreateSubnetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subnet not found response has a 4xx status code
func (o *CreateSubnetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create subnet not found response has a 5xx status code
func (o *CreateSubnetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create subnet not found response a status code equal to that given
func (o *CreateSubnetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create subnet not found response
func (o *CreateSubnetNotFound) Code() int {
	return 404
}

func (o *CreateSubnetNotFound) Error() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetNotFound ", 404)
}

func (o *CreateSubnetNotFound) String() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetNotFound ", 404)
}

func (o *CreateSubnetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSubnetConflict creates a CreateSubnetConflict with default headers values
func NewCreateSubnetConflict() *CreateSubnetConflict {
	return &CreateSubnetConflict{}
}

/*
CreateSubnetConflict describes a response with status code 409, with default header values.

Subnet already exists.
*/
type CreateSubnetConflict struct {
}

// IsSuccess returns true when this create subnet conflict response has a 2xx status code
func (o *CreateSubnetConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create subnet conflict response has a 3xx status code
func (o *CreateSubnetConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subnet conflict response has a 4xx status code
func (o *CreateSubnetConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create subnet conflict response has a 5xx status code
func (o *CreateSubnetConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create subnet conflict response a status code equal to that given
func (o *CreateSubnetConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create subnet conflict response
func (o *CreateSubnetConflict) Code() int {
	return 409
}

func (o *CreateSubnetConflict) Error() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetConflict ", 409)
}

func (o *CreateSubnetConflict) String() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetConflict ", 409)
}

func (o *CreateSubnetConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSubnetInternalServerError creates a CreateSubnetInternalServerError with default headers values
func NewCreateSubnetInternalServerError() *CreateSubnetInternalServerError {
	return &CreateSubnetInternalServerError{}
}

/*
CreateSubnetInternalServerError describes a response with status code 500, with default header values.

Unable to create subnet.
*/
type CreateSubnetInternalServerError struct {
}

// IsSuccess returns true when this create subnet internal server error response has a 2xx status code
func (o *CreateSubnetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create subnet internal server error response has a 3xx status code
func (o *CreateSubnetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subnet internal server error response has a 4xx status code
func (o *CreateSubnetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create subnet internal server error response has a 5xx status code
func (o *CreateSubnetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create subnet internal server error response a status code equal to that given
func (o *CreateSubnetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create subnet internal server error response
func (o *CreateSubnetInternalServerError) Code() int {
	return 500
}

func (o *CreateSubnetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetInternalServerError ", 500)
}

func (o *CreateSubnetInternalServerError) String() string {
	return fmt.Sprintf("[POST /vnet/{vnetId}/subnet][%d] createSubnetInternalServerError ", 500)
}

func (o *CreateSubnetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
