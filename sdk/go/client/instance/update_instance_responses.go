// Code generated by go-swagger; DO NOT EDIT.

package instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/sdk/go/models"
)

// UpdateInstanceReader is a Reader for the UpdateInstance structure.
type UpdateInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateInstanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 507:
		result := NewUpdateInstanceInsufficientStorage()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /instance/{instanceId}] UpdateInstance", response, response.Code())
	}
}

// NewUpdateInstanceOK creates a UpdateInstanceOK with default headers values
func NewUpdateInstanceOK() *UpdateInstanceOK {
	return &UpdateInstanceOK{}
}

/*
UpdateInstanceOK describes a response with status code 200, with default header values.

Returns the updated virtual machine instance object.
*/
type UpdateInstanceOK struct {
	Payload *models.Instance
}

// IsSuccess returns true when this update instance o k response has a 2xx status code
func (o *UpdateInstanceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update instance o k response has a 3xx status code
func (o *UpdateInstanceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update instance o k response has a 4xx status code
func (o *UpdateInstanceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update instance o k response has a 5xx status code
func (o *UpdateInstanceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update instance o k response a status code equal to that given
func (o *UpdateInstanceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update instance o k response
func (o *UpdateInstanceOK) Code() int {
	return 200
}

func (o *UpdateInstanceOK) Error() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceOK  %+v", 200, o.Payload)
}

func (o *UpdateInstanceOK) String() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceOK  %+v", 200, o.Payload)
}

func (o *UpdateInstanceOK) GetPayload() *models.Instance {
	return o.Payload
}

func (o *UpdateInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Instance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInstanceBadRequest creates a UpdateInstanceBadRequest with default headers values
func NewUpdateInstanceBadRequest() *UpdateInstanceBadRequest {
	return &UpdateInstanceBadRequest{}
}

/*
UpdateInstanceBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type UpdateInstanceBadRequest struct {
}

// IsSuccess returns true when this update instance bad request response has a 2xx status code
func (o *UpdateInstanceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update instance bad request response has a 3xx status code
func (o *UpdateInstanceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update instance bad request response has a 4xx status code
func (o *UpdateInstanceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update instance bad request response has a 5xx status code
func (o *UpdateInstanceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update instance bad request response a status code equal to that given
func (o *UpdateInstanceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update instance bad request response
func (o *UpdateInstanceBadRequest) Code() int {
	return 400
}

func (o *UpdateInstanceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceBadRequest ", 400)
}

func (o *UpdateInstanceBadRequest) String() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceBadRequest ", 400)
}

func (o *UpdateInstanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstanceNotFound creates a UpdateInstanceNotFound with default headers values
func NewUpdateInstanceNotFound() *UpdateInstanceNotFound {
	return &UpdateInstanceNotFound{}
}

/*
UpdateInstanceNotFound describes a response with status code 404, with default header values.

Invalid virtual machine instance ID was provided.
*/
type UpdateInstanceNotFound struct {
}

// IsSuccess returns true when this update instance not found response has a 2xx status code
func (o *UpdateInstanceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update instance not found response has a 3xx status code
func (o *UpdateInstanceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update instance not found response has a 4xx status code
func (o *UpdateInstanceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update instance not found response has a 5xx status code
func (o *UpdateInstanceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update instance not found response a status code equal to that given
func (o *UpdateInstanceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update instance not found response
func (o *UpdateInstanceNotFound) Code() int {
	return 404
}

func (o *UpdateInstanceNotFound) Error() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceNotFound ", 404)
}

func (o *UpdateInstanceNotFound) String() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceNotFound ", 404)
}

func (o *UpdateInstanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstanceInternalServerError creates a UpdateInstanceInternalServerError with default headers values
func NewUpdateInstanceInternalServerError() *UpdateInstanceInternalServerError {
	return &UpdateInstanceInternalServerError{}
}

/*
UpdateInstanceInternalServerError describes a response with status code 500, with default header values.

Unable to update the virtual machine instance.
*/
type UpdateInstanceInternalServerError struct {
}

// IsSuccess returns true when this update instance internal server error response has a 2xx status code
func (o *UpdateInstanceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update instance internal server error response has a 3xx status code
func (o *UpdateInstanceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update instance internal server error response has a 4xx status code
func (o *UpdateInstanceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update instance internal server error response has a 5xx status code
func (o *UpdateInstanceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update instance internal server error response a status code equal to that given
func (o *UpdateInstanceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update instance internal server error response
func (o *UpdateInstanceInternalServerError) Code() int {
	return 500
}

func (o *UpdateInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceInternalServerError ", 500)
}

func (o *UpdateInstanceInternalServerError) String() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceInternalServerError ", 500)
}

func (o *UpdateInstanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInstanceInsufficientStorage creates a UpdateInstanceInsufficientStorage with default headers values
func NewUpdateInstanceInsufficientStorage() *UpdateInstanceInsufficientStorage {
	return &UpdateInstanceInsufficientStorage{}
}

/*
UpdateInstanceInsufficientStorage describes a response with status code 507, with default header values.

Requested instance characteristics are beyond associated project's quota in place.
*/
type UpdateInstanceInsufficientStorage struct {
}

// IsSuccess returns true when this update instance insufficient storage response has a 2xx status code
func (o *UpdateInstanceInsufficientStorage) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update instance insufficient storage response has a 3xx status code
func (o *UpdateInstanceInsufficientStorage) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update instance insufficient storage response has a 4xx status code
func (o *UpdateInstanceInsufficientStorage) IsClientError() bool {
	return false
}

// IsServerError returns true when this update instance insufficient storage response has a 5xx status code
func (o *UpdateInstanceInsufficientStorage) IsServerError() bool {
	return true
}

// IsCode returns true when this update instance insufficient storage response a status code equal to that given
func (o *UpdateInstanceInsufficientStorage) IsCode(code int) bool {
	return code == 507
}

// Code gets the status code for the update instance insufficient storage response
func (o *UpdateInstanceInsufficientStorage) Code() int {
	return 507
}

func (o *UpdateInstanceInsufficientStorage) Error() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceInsufficientStorage ", 507)
}

func (o *UpdateInstanceInsufficientStorage) String() string {
	return fmt.Sprintf("[PUT /instance/{instanceId}][%d] updateInstanceInsufficientStorage ", 507)
}

func (o *UpdateInstanceInsufficientStorage) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
