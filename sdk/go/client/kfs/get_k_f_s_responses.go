// Code generated by go-swagger; DO NOT EDIT.

package kfs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/sdk/go/models"
)

// GetKFSReader is a Reader for the GetKFS structure.
type GetKFSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKFSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKFSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetKFSNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /kfs/{kfsId}] GetKFS", response, response.Code())
	}
}

// NewGetKFSOK creates a GetKFSOK with default headers values
func NewGetKFSOK() *GetKFSOK {
	return &GetKFSOK{}
}

/*
GetKFSOK describes a response with status code 200, with default header values.

Returns the KFS storage volume object.
*/
type GetKFSOK struct {
	Payload *models.KFS
}

// IsSuccess returns true when this get k f s o k response has a 2xx status code
func (o *GetKFSOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get k f s o k response has a 3xx status code
func (o *GetKFSOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k f s o k response has a 4xx status code
func (o *GetKFSOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get k f s o k response has a 5xx status code
func (o *GetKFSOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get k f s o k response a status code equal to that given
func (o *GetKFSOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get k f s o k response
func (o *GetKFSOK) Code() int {
	return 200
}

func (o *GetKFSOK) Error() string {
	return fmt.Sprintf("[GET /kfs/{kfsId}][%d] getKFSOK  %+v", 200, o.Payload)
}

func (o *GetKFSOK) String() string {
	return fmt.Sprintf("[GET /kfs/{kfsId}][%d] getKFSOK  %+v", 200, o.Payload)
}

func (o *GetKFSOK) GetPayload() *models.KFS {
	return o.Payload
}

func (o *GetKFSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KFS)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKFSNotFound creates a GetKFSNotFound with default headers values
func NewGetKFSNotFound() *GetKFSNotFound {
	return &GetKFSNotFound{}
}

/*
GetKFSNotFound describes a response with status code 404, with default header values.

Invalid KFS ID was provided.
*/
type GetKFSNotFound struct {
}

// IsSuccess returns true when this get k f s not found response has a 2xx status code
func (o *GetKFSNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k f s not found response has a 3xx status code
func (o *GetKFSNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k f s not found response has a 4xx status code
func (o *GetKFSNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k f s not found response has a 5xx status code
func (o *GetKFSNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get k f s not found response a status code equal to that given
func (o *GetKFSNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get k f s not found response
func (o *GetKFSNotFound) Code() int {
	return 404
}

func (o *GetKFSNotFound) Error() string {
	return fmt.Sprintf("[GET /kfs/{kfsId}][%d] getKFSNotFound ", 404)
}

func (o *GetKFSNotFound) String() string {
	return fmt.Sprintf("[GET /kfs/{kfsId}][%d] getKFSNotFound ", 404)
}

func (o *GetKFSNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
