// Code generated by go-swagger; DO NOT EDIT.

package kfs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/sdk/go/models"
)

// UpdateKFSReader is a Reader for the UpdateKFS structure.
type UpdateKFSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateKFSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateKFSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateKFSBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateKFSNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateKFSInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /kfs/{kfsId}] UpdateKFS", response, response.Code())
	}
}

// NewUpdateKFSOK creates a UpdateKFSOK with default headers values
func NewUpdateKFSOK() *UpdateKFSOK {
	return &UpdateKFSOK{}
}

/*
UpdateKFSOK describes a response with status code 200, with default header values.

Returns the updated KFS storage volume object.
*/
type UpdateKFSOK struct {
	Payload *models.KFS
}

// IsSuccess returns true when this update k f s o k response has a 2xx status code
func (o *UpdateKFSOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update k f s o k response has a 3xx status code
func (o *UpdateKFSOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k f s o k response has a 4xx status code
func (o *UpdateKFSOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k f s o k response has a 5xx status code
func (o *UpdateKFSOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update k f s o k response a status code equal to that given
func (o *UpdateKFSOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update k f s o k response
func (o *UpdateKFSOK) Code() int {
	return 200
}

func (o *UpdateKFSOK) Error() string {
	return fmt.Sprintf("[PUT /kfs/{kfsId}][%d] updateKFSOK  %+v", 200, o.Payload)
}

func (o *UpdateKFSOK) String() string {
	return fmt.Sprintf("[PUT /kfs/{kfsId}][%d] updateKFSOK  %+v", 200, o.Payload)
}

func (o *UpdateKFSOK) GetPayload() *models.KFS {
	return o.Payload
}

func (o *UpdateKFSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KFS)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateKFSBadRequest creates a UpdateKFSBadRequest with default headers values
func NewUpdateKFSBadRequest() *UpdateKFSBadRequest {
	return &UpdateKFSBadRequest{}
}

/*
UpdateKFSBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type UpdateKFSBadRequest struct {
}

// IsSuccess returns true when this update k f s bad request response has a 2xx status code
func (o *UpdateKFSBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k f s bad request response has a 3xx status code
func (o *UpdateKFSBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k f s bad request response has a 4xx status code
func (o *UpdateKFSBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k f s bad request response has a 5xx status code
func (o *UpdateKFSBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update k f s bad request response a status code equal to that given
func (o *UpdateKFSBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update k f s bad request response
func (o *UpdateKFSBadRequest) Code() int {
	return 400
}

func (o *UpdateKFSBadRequest) Error() string {
	return fmt.Sprintf("[PUT /kfs/{kfsId}][%d] updateKFSBadRequest ", 400)
}

func (o *UpdateKFSBadRequest) String() string {
	return fmt.Sprintf("[PUT /kfs/{kfsId}][%d] updateKFSBadRequest ", 400)
}

func (o *UpdateKFSBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKFSNotFound creates a UpdateKFSNotFound with default headers values
func NewUpdateKFSNotFound() *UpdateKFSNotFound {
	return &UpdateKFSNotFound{}
}

/*
UpdateKFSNotFound describes a response with status code 404, with default header values.

Invalid KFs storage volume ID was provided.
*/
type UpdateKFSNotFound struct {
}

// IsSuccess returns true when this update k f s not found response has a 2xx status code
func (o *UpdateKFSNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k f s not found response has a 3xx status code
func (o *UpdateKFSNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k f s not found response has a 4xx status code
func (o *UpdateKFSNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k f s not found response has a 5xx status code
func (o *UpdateKFSNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update k f s not found response a status code equal to that given
func (o *UpdateKFSNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update k f s not found response
func (o *UpdateKFSNotFound) Code() int {
	return 404
}

func (o *UpdateKFSNotFound) Error() string {
	return fmt.Sprintf("[PUT /kfs/{kfsId}][%d] updateKFSNotFound ", 404)
}

func (o *UpdateKFSNotFound) String() string {
	return fmt.Sprintf("[PUT /kfs/{kfsId}][%d] updateKFSNotFound ", 404)
}

func (o *UpdateKFSNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKFSInternalServerError creates a UpdateKFSInternalServerError with default headers values
func NewUpdateKFSInternalServerError() *UpdateKFSInternalServerError {
	return &UpdateKFSInternalServerError{}
}

/*
UpdateKFSInternalServerError describes a response with status code 500, with default header values.

Unable to update the KFS storage volume.
*/
type UpdateKFSInternalServerError struct {
}

// IsSuccess returns true when this update k f s internal server error response has a 2xx status code
func (o *UpdateKFSInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k f s internal server error response has a 3xx status code
func (o *UpdateKFSInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k f s internal server error response has a 4xx status code
func (o *UpdateKFSInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k f s internal server error response has a 5xx status code
func (o *UpdateKFSInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update k f s internal server error response a status code equal to that given
func (o *UpdateKFSInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update k f s internal server error response
func (o *UpdateKFSInternalServerError) Code() int {
	return 500
}

func (o *UpdateKFSInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /kfs/{kfsId}][%d] updateKFSInternalServerError ", 500)
}

func (o *UpdateKFSInternalServerError) String() string {
	return fmt.Sprintf("[PUT /kfs/{kfsId}][%d] updateKFSInternalServerError ", 500)
}

func (o *UpdateKFSInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
