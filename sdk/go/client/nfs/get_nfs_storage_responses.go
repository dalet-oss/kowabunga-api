// Code generated by go-swagger; DO NOT EDIT.

package nfs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/sdk/go/models"
)

// GetNfsStorageReader is a Reader for the GetNfsStorage structure.
type GetNfsStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNfsStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNfsStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetNfsStorageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nfs/{nfsId}] GetNfsStorage", response, response.Code())
	}
}

// NewGetNfsStorageOK creates a GetNfsStorageOK with default headers values
func NewGetNfsStorageOK() *GetNfsStorageOK {
	return &GetNfsStorageOK{}
}

/*
GetNfsStorageOK describes a response with status code 200, with default header values.

Returns the NFS storage object.
*/
type GetNfsStorageOK struct {
	Payload *models.StorageNFS
}

// IsSuccess returns true when this get nfs storage o k response has a 2xx status code
func (o *GetNfsStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nfs storage o k response has a 3xx status code
func (o *GetNfsStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nfs storage o k response has a 4xx status code
func (o *GetNfsStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nfs storage o k response has a 5xx status code
func (o *GetNfsStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nfs storage o k response a status code equal to that given
func (o *GetNfsStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nfs storage o k response
func (o *GetNfsStorageOK) Code() int {
	return 200
}

func (o *GetNfsStorageOK) Error() string {
	return fmt.Sprintf("[GET /nfs/{nfsId}][%d] getNfsStorageOK  %+v", 200, o.Payload)
}

func (o *GetNfsStorageOK) String() string {
	return fmt.Sprintf("[GET /nfs/{nfsId}][%d] getNfsStorageOK  %+v", 200, o.Payload)
}

func (o *GetNfsStorageOK) GetPayload() *models.StorageNFS {
	return o.Payload
}

func (o *GetNfsStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageNFS)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNfsStorageNotFound creates a GetNfsStorageNotFound with default headers values
func NewGetNfsStorageNotFound() *GetNfsStorageNotFound {
	return &GetNfsStorageNotFound{}
}

/*
GetNfsStorageNotFound describes a response with status code 404, with default header values.

Invalid NFS storage ID was provided.
*/
type GetNfsStorageNotFound struct {
}

// IsSuccess returns true when this get nfs storage not found response has a 2xx status code
func (o *GetNfsStorageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nfs storage not found response has a 3xx status code
func (o *GetNfsStorageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nfs storage not found response has a 4xx status code
func (o *GetNfsStorageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nfs storage not found response has a 5xx status code
func (o *GetNfsStorageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nfs storage not found response a status code equal to that given
func (o *GetNfsStorageNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nfs storage not found response
func (o *GetNfsStorageNotFound) Code() int {
	return 404
}

func (o *GetNfsStorageNotFound) Error() string {
	return fmt.Sprintf("[GET /nfs/{nfsId}][%d] getNfsStorageNotFound ", 404)
}

func (o *GetNfsStorageNotFound) String() string {
	return fmt.Sprintf("[GET /nfs/{nfsId}][%d] getNfsStorageNotFound ", 404)
}

func (o *GetNfsStorageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
