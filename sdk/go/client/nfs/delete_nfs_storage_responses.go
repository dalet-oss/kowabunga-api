// Code generated by go-swagger; DO NOT EDIT.

package nfs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteNfsStorageReader is a Reader for the DeleteNfsStorage structure.
type DeleteNfsStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNfsStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNfsStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteNfsStorageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteNfsStorageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNfsStorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /nfs/{nfsId}] DeleteNfsStorage", response, response.Code())
	}
}

// NewDeleteNfsStorageOK creates a DeleteNfsStorageOK with default headers values
func NewDeleteNfsStorageOK() *DeleteNfsStorageOK {
	return &DeleteNfsStorageOK{}
}

/*
DeleteNfsStorageOK describes a response with status code 200, with default header values.

The NFS storage has been successfully removed.
*/
type DeleteNfsStorageOK struct {
}

// IsSuccess returns true when this delete nfs storage o k response has a 2xx status code
func (o *DeleteNfsStorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete nfs storage o k response has a 3xx status code
func (o *DeleteNfsStorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete nfs storage o k response has a 4xx status code
func (o *DeleteNfsStorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete nfs storage o k response has a 5xx status code
func (o *DeleteNfsStorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete nfs storage o k response a status code equal to that given
func (o *DeleteNfsStorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete nfs storage o k response
func (o *DeleteNfsStorageOK) Code() int {
	return 200
}

func (o *DeleteNfsStorageOK) Error() string {
	return fmt.Sprintf("[DELETE /nfs/{nfsId}][%d] deleteNfsStorageOK ", 200)
}

func (o *DeleteNfsStorageOK) String() string {
	return fmt.Sprintf("[DELETE /nfs/{nfsId}][%d] deleteNfsStorageOK ", 200)
}

func (o *DeleteNfsStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNfsStorageNotFound creates a DeleteNfsStorageNotFound with default headers values
func NewDeleteNfsStorageNotFound() *DeleteNfsStorageNotFound {
	return &DeleteNfsStorageNotFound{}
}

/*
DeleteNfsStorageNotFound describes a response with status code 404, with default header values.

Invalid NFS storage ID was provided.
*/
type DeleteNfsStorageNotFound struct {
}

// IsSuccess returns true when this delete nfs storage not found response has a 2xx status code
func (o *DeleteNfsStorageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete nfs storage not found response has a 3xx status code
func (o *DeleteNfsStorageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete nfs storage not found response has a 4xx status code
func (o *DeleteNfsStorageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete nfs storage not found response has a 5xx status code
func (o *DeleteNfsStorageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete nfs storage not found response a status code equal to that given
func (o *DeleteNfsStorageNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete nfs storage not found response
func (o *DeleteNfsStorageNotFound) Code() int {
	return 404
}

func (o *DeleteNfsStorageNotFound) Error() string {
	return fmt.Sprintf("[DELETE /nfs/{nfsId}][%d] deleteNfsStorageNotFound ", 404)
}

func (o *DeleteNfsStorageNotFound) String() string {
	return fmt.Sprintf("[DELETE /nfs/{nfsId}][%d] deleteNfsStorageNotFound ", 404)
}

func (o *DeleteNfsStorageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNfsStorageConflict creates a DeleteNfsStorageConflict with default headers values
func NewDeleteNfsStorageConflict() *DeleteNfsStorageConflict {
	return &DeleteNfsStorageConflict{}
}

/*
DeleteNfsStorageConflict describes a response with status code 409, with default header values.

The NFS storage is not empty or still being referenced.
*/
type DeleteNfsStorageConflict struct {
}

// IsSuccess returns true when this delete nfs storage conflict response has a 2xx status code
func (o *DeleteNfsStorageConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete nfs storage conflict response has a 3xx status code
func (o *DeleteNfsStorageConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete nfs storage conflict response has a 4xx status code
func (o *DeleteNfsStorageConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete nfs storage conflict response has a 5xx status code
func (o *DeleteNfsStorageConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete nfs storage conflict response a status code equal to that given
func (o *DeleteNfsStorageConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete nfs storage conflict response
func (o *DeleteNfsStorageConflict) Code() int {
	return 409
}

func (o *DeleteNfsStorageConflict) Error() string {
	return fmt.Sprintf("[DELETE /nfs/{nfsId}][%d] deleteNfsStorageConflict ", 409)
}

func (o *DeleteNfsStorageConflict) String() string {
	return fmt.Sprintf("[DELETE /nfs/{nfsId}][%d] deleteNfsStorageConflict ", 409)
}

func (o *DeleteNfsStorageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNfsStorageInternalServerError creates a DeleteNfsStorageInternalServerError with default headers values
func NewDeleteNfsStorageInternalServerError() *DeleteNfsStorageInternalServerError {
	return &DeleteNfsStorageInternalServerError{}
}

/*
DeleteNfsStorageInternalServerError describes a response with status code 500, with default header values.

Unable to delete NFS storage.
*/
type DeleteNfsStorageInternalServerError struct {
}

// IsSuccess returns true when this delete nfs storage internal server error response has a 2xx status code
func (o *DeleteNfsStorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete nfs storage internal server error response has a 3xx status code
func (o *DeleteNfsStorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete nfs storage internal server error response has a 4xx status code
func (o *DeleteNfsStorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete nfs storage internal server error response has a 5xx status code
func (o *DeleteNfsStorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete nfs storage internal server error response a status code equal to that given
func (o *DeleteNfsStorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete nfs storage internal server error response
func (o *DeleteNfsStorageInternalServerError) Code() int {
	return 500
}

func (o *DeleteNfsStorageInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /nfs/{nfsId}][%d] deleteNfsStorageInternalServerError ", 500)
}

func (o *DeleteNfsStorageInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /nfs/{nfsId}][%d] deleteNfsStorageInternalServerError ", 500)
}

func (o *DeleteNfsStorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
