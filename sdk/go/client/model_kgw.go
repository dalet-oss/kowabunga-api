/*
Kowabunga API documentation

Kvm Orchestrator With A BUNch of Goods Added

API version: 0.10.0
Contact: csops@dalet.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the KGW type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KGW{}

// KGW A Kowabunga Network Gateway is a network gateway used for your internet inbound and outbound traffic.
type KGW struct {
	// The KGW (Kowabunga Network Gateway) ID (auto-generated).
	Id *string `json:"id,omitempty"`
	// The KGW (Kowabunga Network Gateway) name.
	Name *string `json:"name,omitempty"`
	// The KGW (Kowabunga Network Gateway) description.
	Description *string `json:"description,omitempty"`
	// The KGW (Kowabunga Network Gateway) public IP (read-only).
	PublicIp *string `json:"public_ip,omitempty"`
	// The KGW (Kowabunga Network Gateway) private IP (read-only).
	PrivateIp *string `json:"private_ip,omitempty"`
	// The KGW (Kowabunga Network Gateway) list of NAT entries.
	Nats []KGWNat `json:"nats,omitempty"`
}

// NewKGW instantiates a new KGW object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKGW() *KGW {
	this := KGW{}
	return &this
}

// NewKGWWithDefaults instantiates a new KGW object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKGWWithDefaults() *KGW {
	this := KGW{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KGW) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGW) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KGW) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KGW) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KGW) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGW) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KGW) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KGW) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KGW) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGW) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KGW) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KGW) SetDescription(v string) {
	o.Description = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *KGW) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGW) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *KGW) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *KGW) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *KGW) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp) {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGW) GetPrivateIpOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *KGW) HasPrivateIp() bool {
	if o != nil && !IsNil(o.PrivateIp) {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *KGW) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetNats returns the Nats field value if set, zero value otherwise.
func (o *KGW) GetNats() []KGWNat {
	if o == nil || IsNil(o.Nats) {
		var ret []KGWNat
		return ret
	}
	return o.Nats
}

// GetNatsOk returns a tuple with the Nats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KGW) GetNatsOk() ([]KGWNat, bool) {
	if o == nil || IsNil(o.Nats) {
		return nil, false
	}
	return o.Nats, true
}

// HasNats returns a boolean if a field has been set.
func (o *KGW) HasNats() bool {
	if o != nil && !IsNil(o.Nats) {
		return true
	}

	return false
}

// SetNats gets a reference to the given []KGWNat and assigns it to the Nats field.
func (o *KGW) SetNats(v []KGWNat) {
	o.Nats = v
}

func (o KGW) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KGW) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.PublicIp) {
		toSerialize["public_ip"] = o.PublicIp
	}
	if !IsNil(o.PrivateIp) {
		toSerialize["private_ip"] = o.PrivateIp
	}
	if !IsNil(o.Nats) {
		toSerialize["nats"] = o.Nats
	}
	return toSerialize, nil
}

type NullableKGW struct {
	value *KGW
	isSet bool
}

func (v NullableKGW) Get() *KGW {
	return v.value
}

func (v *NullableKGW) Set(val *KGW) {
	v.value = val
	v.isSet = true
}

func (v NullableKGW) IsSet() bool {
	return v.isSet
}

func (v *NullableKGW) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKGW(val *KGW) *NullableKGW {
	return &NullableKGW{value: val, isSet: true}
}

func (v NullableKGW) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKGW) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


