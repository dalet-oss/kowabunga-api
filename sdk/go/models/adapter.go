// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Adapter adapter
//
// swagger:model Adapter
type Adapter struct {

	// The network adapter list of associated IPv4 addresses.
	Addresses []string `json:"addresses"`

	// The network adapter description.
	Description string `json:"description,omitempty"`

	// The network adapter ID (auto-generated).
	ID string `json:"id,omitempty"`

	// The network adapter hardware address (e.g. 00:11:22:33:44:55). Auto-generated if unspecified.
	Mac string `json:"mac,omitempty"`

	// The network adapter name.
	// Required: true
	Name *string `json:"name"`

	// The network adapter is a reserved adapter (e.g. router), where the same hardware address can be reused over several subnets.
	Reserved *bool `json:"reserved,omitempty"`
}

// Validate validates this adapter
func (m *Adapter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Adapter) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this adapter based on context it is used
func (m *Adapter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Adapter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Adapter) UnmarshalBinary(b []byte) error {
	var res Adapter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
