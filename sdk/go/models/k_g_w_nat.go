// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// KGWNat KGW Nat definition
//
// swagger:model KGWNat
type KGWNat struct {

	// Ports being forwarded from the public to the private IP. Accept Ranges
	// Required: true
	Ports *string `json:"ports"`

	// Target Private IP. Leave blank for a new generated one
	// Required: true
	PrivateIP *string `json:"private_ip"`

	// Public IP from created Adapter. Leave empty to use the default Public IP
	PublicIP string `json:"public_ip,omitempty"`
}

// Validate validates this k g w nat
func (m *KGWNat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePorts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrivateIP(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *KGWNat) validatePorts(formats strfmt.Registry) error {

	if err := validate.Required("ports", "body", m.Ports); err != nil {
		return err
	}

	return nil
}

func (m *KGWNat) validatePrivateIP(formats strfmt.Registry) error {

	if err := validate.Required("private_ip", "body", m.PrivateIP); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this k g w nat based on context it is used
func (m *KGWNat) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *KGWNat) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KGWNat) UnmarshalBinary(b []byte) error {
	var res KGWNat
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
