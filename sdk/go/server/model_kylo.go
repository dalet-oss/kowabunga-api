/*
 * Kowabunga API documentation
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.42.0
 * Contact: csops@dalet.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server




// Kylo - A Kylo provides an elastic NFS-like remote storage volume.
type Kylo struct {

	// The Kylo ID (auto-generated).
	Id string `json:"id,omitempty"`

	// The Kylo name.
	Name string `json:"name"`

	// The Kylo description.
	Description string `json:"description,omitempty"`

	// The Kylo volume access type.
	Access string `json:"access,omitempty"`

	// The Kylo NFS protocol versions to be supported.
	Protocols []int32 `json:"protocols,omitempty"`

	// The Kylo endpoint FQDN (read-only).
	Endpoint string `json:"endpoint,omitempty"`

	// The Kylo volume bytes used (read-only).
	Size int64 `json:"size,omitempty"`
}

// AssertKyloRequired checks if the required fields are not zero-ed
func AssertKyloRequired(obj Kylo) error {
	elements := map[string]interface{}{
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertKyloConstraints checks if the values respects the defined constraints
func AssertKyloConstraints(obj Kylo) error {
	return nil
}
