/*
 * Kowabunga
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.10.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
	"net/http"
	"errors"
)

// NetgwAPIService is a service that implements the logic for the NetgwAPIServicer
// This service should implement the business logic for every endpoint for the NetgwAPI API.
// Include any external packages or services that will be required by this service.
type NetgwAPIService struct {
}

// NewNetgwAPIService creates a default api service
func NewNetgwAPIService() NetgwAPIServicer {
	return &NetgwAPIService{}
}

// CreateNetGW - 
func (s *NetgwAPIService) CreateNetGW(ctx context.Context, zoneId string, body NetGw) (ImplResponse, error) {
	// TODO - update CreateNetGW with the required logic for this service method.
	// Add api_netgw_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, NetGw{}) or use other options such as http.Ok ...
	// return Response(201, NetGw{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateNetGW method not implemented")
}

// DeleteNetGW - 
func (s *NetgwAPIService) DeleteNetGW(ctx context.Context, netgwId string) (ImplResponse, error) {
	// TODO - update DeleteNetGW with the required logic for this service method.
	// Add api_netgw_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteNetGW method not implemented")
}

// GetAllNetGWs - 
func (s *NetgwAPIService) GetAllNetGWs(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAllNetGWs with the required logic for this service method.
	// Add api_netgw_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAllNetGWs method not implemented")
}

// GetNetGW - 
func (s *NetgwAPIService) GetNetGW(ctx context.Context, netgwId string) (ImplResponse, error) {
	// TODO - update GetNetGW with the required logic for this service method.
	// Add api_netgw_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, NetGw{}) or use other options such as http.Ok ...
	// return Response(200, NetGw{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetNetGW method not implemented")
}

// GetZoneNetGWs - 
func (s *NetgwAPIService) GetZoneNetGWs(ctx context.Context, zoneId string) (ImplResponse, error) {
	// TODO - update GetZoneNetGWs with the required logic for this service method.
	// Add api_netgw_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetZoneNetGWs method not implemented")
}

// UpdateNetGW - 
func (s *NetgwAPIService) UpdateNetGW(ctx context.Context, netgwId string, body NetGw) (ImplResponse, error) {
	// TODO - update UpdateNetGW with the required logic for this service method.
	// Add api_netgw_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, NetGw{}) or use other options such as http.Ok ...
	// return Response(200, NetGw{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateNetGW method not implemented")
}
