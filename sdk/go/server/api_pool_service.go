/*
 * Kowabunga
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.10.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
	"net/http"
	"errors"
)

// PoolAPIService is a service that implements the logic for the PoolAPIServicer
// This service should implement the business logic for every endpoint for the PoolAPI API.
// Include any external packages or services that will be required by this service.
type PoolAPIService struct {
}

// NewPoolAPIService creates a default api service
func NewPoolAPIService() PoolAPIServicer {
	return &PoolAPIService{}
}

// CreatePool - 
func (s *PoolAPIService) CreatePool(ctx context.Context, zoneId string, body StoragePool, hostId string) (ImplResponse, error) {
	// TODO - update CreatePool with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, StoragePool{}) or use other options such as http.Ok ...
	// return Response(201, StoragePool{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreatePool method not implemented")
}

// CreateTemplate - 
func (s *PoolAPIService) CreateTemplate(ctx context.Context, poolId string, body Template) (ImplResponse, error) {
	// TODO - update CreateTemplate with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Template{}) or use other options such as http.Ok ...
	// return Response(201, Template{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateTemplate method not implemented")
}

// DeletePool - 
func (s *PoolAPIService) DeletePool(ctx context.Context, poolId string) (ImplResponse, error) {
	// TODO - update DeletePool with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeletePool method not implemented")
}

// GetAllPools - 
func (s *PoolAPIService) GetAllPools(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAllPools with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAllPools method not implemented")
}

// GetPool - 
func (s *PoolAPIService) GetPool(ctx context.Context, poolId string) (ImplResponse, error) {
	// TODO - update GetPool with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, StoragePool{}) or use other options such as http.Ok ...
	// return Response(200, StoragePool{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPool method not implemented")
}

// GetPoolTemplates - 
func (s *PoolAPIService) GetPoolTemplates(ctx context.Context, poolId string) (ImplResponse, error) {
	// TODO - update GetPoolTemplates with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPoolTemplates method not implemented")
}

// GetPoolVolumes - 
func (s *PoolAPIService) GetPoolVolumes(ctx context.Context, poolId string) (ImplResponse, error) {
	// TODO - update GetPoolVolumes with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPoolVolumes method not implemented")
}

// GetZonePools - 
func (s *PoolAPIService) GetZonePools(ctx context.Context, zoneId string) (ImplResponse, error) {
	// TODO - update GetZonePools with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetZonePools method not implemented")
}

// UpdatePool - 
func (s *PoolAPIService) UpdatePool(ctx context.Context, poolId string, body StoragePool) (ImplResponse, error) {
	// TODO - update UpdatePool with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, StoragePool{}) or use other options such as http.Ok ...
	// return Response(200, StoragePool{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdatePool method not implemented")
}

// UpdatePoolDefaultTemplate - 
func (s *PoolAPIService) UpdatePoolDefaultTemplate(ctx context.Context, poolId string, templateId string) (ImplResponse, error) {
	// TODO - update UpdatePoolDefaultTemplate with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdatePoolDefaultTemplate method not implemented")
}

// UpdateZoneDefaultPool - 
func (s *PoolAPIService) UpdateZoneDefaultPool(ctx context.Context, zoneId string, poolId string) (ImplResponse, error) {
	// TODO - update UpdateZoneDefaultPool with the required logic for this service method.
	// Add api_pool_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateZoneDefaultPool method not implemented")
}
