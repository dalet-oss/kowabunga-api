// Code generated by go-swagger; DO NOT EDIT.

package instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dalet-oss/kowabunga-api/sdk/go/models"
)

// GetInstanceRemoteConnectionOKCode is the HTTP code returned for type GetInstanceRemoteConnectionOK
const GetInstanceRemoteConnectionOKCode int = 200

/*
GetInstanceRemoteConnectionOK Returns the virtual machine remote connection URL.

swagger:response getInstanceRemoteConnectionOK
*/
type GetInstanceRemoteConnectionOK struct {

	/*
	  In: Body
	*/
	Payload *models.InstanceRemoteAccess `json:"body,omitempty"`
}

// NewGetInstanceRemoteConnectionOK creates GetInstanceRemoteConnectionOK with default headers values
func NewGetInstanceRemoteConnectionOK() *GetInstanceRemoteConnectionOK {

	return &GetInstanceRemoteConnectionOK{}
}

// WithPayload adds the payload to the get instance remote connection o k response
func (o *GetInstanceRemoteConnectionOK) WithPayload(payload *models.InstanceRemoteAccess) *GetInstanceRemoteConnectionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get instance remote connection o k response
func (o *GetInstanceRemoteConnectionOK) SetPayload(payload *models.InstanceRemoteAccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInstanceRemoteConnectionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInstanceRemoteConnectionNotFoundCode is the HTTP code returned for type GetInstanceRemoteConnectionNotFound
const GetInstanceRemoteConnectionNotFoundCode int = 404

/*
GetInstanceRemoteConnectionNotFound Invalid instance ID was provided.

swagger:response getInstanceRemoteConnectionNotFound
*/
type GetInstanceRemoteConnectionNotFound struct {
}

// NewGetInstanceRemoteConnectionNotFound creates GetInstanceRemoteConnectionNotFound with default headers values
func NewGetInstanceRemoteConnectionNotFound() *GetInstanceRemoteConnectionNotFound {

	return &GetInstanceRemoteConnectionNotFound{}
}

// WriteResponse to the client
func (o *GetInstanceRemoteConnectionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
