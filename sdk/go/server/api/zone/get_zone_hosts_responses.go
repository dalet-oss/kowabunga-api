// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetZoneHostsOKCode is the HTTP code returned for type GetZoneHostsOK
const GetZoneHostsOKCode int = 200

/*
GetZoneHostsOK Returns an array of host IDs.

swagger:response getZoneHostsOK
*/
type GetZoneHostsOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetZoneHostsOK creates GetZoneHostsOK with default headers values
func NewGetZoneHostsOK() *GetZoneHostsOK {

	return &GetZoneHostsOK{}
}

// WithPayload adds the payload to the get zone hosts o k response
func (o *GetZoneHostsOK) WithPayload(payload []string) *GetZoneHostsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get zone hosts o k response
func (o *GetZoneHostsOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetZoneHostsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetZoneHostsNotFoundCode is the HTTP code returned for type GetZoneHostsNotFound
const GetZoneHostsNotFoundCode int = 404

/*
GetZoneHostsNotFound Invalid zone ID was provided.

swagger:response getZoneHostsNotFound
*/
type GetZoneHostsNotFound struct {
}

// NewGetZoneHostsNotFound creates GetZoneHostsNotFound with default headers values
func NewGetZoneHostsNotFound() *GetZoneHostsNotFound {

	return &GetZoneHostsNotFound{}
}

// WriteResponse to the client
func (o *GetZoneHostsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
