/*
 * Kowabunga API documentation
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.36.0
 * Contact: csops@dalet.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server




// Kgw - A Kowabunga Network Gateway is a network gateway used for your internet inbound and outbound traffic.
type Kgw struct {

	// The KGW (Kowabunga Network Gateway) ID (auto-generated).
	Id string `json:"id,omitempty"`

	// The KGW (Kowabunga Network Gateway) name.
	Name string `json:"name,omitempty"`

	// The KGW (Kowabunga Network Gateway) description.
	Description string `json:"description,omitempty"`

	// The KGW (Kowabunga Network Gateway) list of per-zone addresses.
	Addresses []KgwZoneSettings `json:"addresses,omitempty"`

	// The KGW (Kowabunga Network Gateway) list of NAT entries.
	Nats []KgwNat `json:"nats,omitempty"`

	// The KGW (Kowabunga Network Gateway) list of Kowabunga private VPC subnet peering entries.
	VpcPeerings []KgwVpcPeering `json:"vpc_peerings,omitempty"`
}

// AssertKgwRequired checks if the required fields are not zero-ed
func AssertKgwRequired(obj Kgw) error {
	for _, el := range obj.Addresses {
		if err := AssertKgwZoneSettingsRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Nats {
		if err := AssertKgwNatRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.VpcPeerings {
		if err := AssertKgwVpcPeeringRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertKgwConstraints checks if the values respects the defined constraints
func AssertKgwConstraints(obj Kgw) error {
	return nil
}
