/*
 * Kowabunga API documentation
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.41.0
 * Contact: csops@dalet.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server




// Kgw - A Kowabunga Network Gateway is a network gateway used for your Internet inbound and outbound traffic.
type Kgw struct {

	// The KGW (Kowabunga Network Gateway) ID (auto-generated).
	Id string `json:"id,omitempty"`

	// The KGW (Kowabunga Network Gateway) name.
	Name string `json:"name,omitempty"`

	// The KGW (Kowabunga Network Gateway) description.
	Description string `json:"description,omitempty"`

	// The KGW (Kowabunga Network Gateway) list of assigned virtual IPs per-zone addresses (read-only).
	Netip KgwNetIp `json:"netip,omitempty"`

	// The KGW (Kowabunga Network Gateway) firewall settings from/to public Internet).
	Firewall KgwFirewall `json:"firewall,omitempty"`

	// The KGW (Kowabunga Network Gateway) list of NAT forwarding entries. KGW will forward public Internet traffic from all public virtual IPs to requested private subnet IP addresses.
	Dnat []KgwdNatRule `json:"dnat,omitempty"`

	// The KGW (Kowabunga Network Gateway) list of Kowabunga private VPC subnet peering entries.
	VpcPeerings []KgwVpcPeering `json:"vpc_peerings,omitempty"`
}

// AssertKgwRequired checks if the required fields are not zero-ed
func AssertKgwRequired(obj Kgw) error {
	for _, el := range obj.Dnat {
		if err := AssertKgwdNatRuleRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.VpcPeerings {
		if err := AssertKgwVpcPeeringRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertKgwConstraints checks if the values respects the defined constraints
func AssertKgwConstraints(obj Kgw) error {
	return nil
}
