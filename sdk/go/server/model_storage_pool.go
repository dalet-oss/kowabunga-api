/*
 * Kowabunga API documentation
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.10.0
 * Contact: csops@dalet.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server




// StoragePool - A storage pool.
type StoragePool struct {

	// The storage pool ID (auto-generated).
	Id string `json:"id,omitempty"`

	// The storage pool name.
	Name string `json:"name"`

	// The storage pool description.
	Description string `json:"description,omitempty"`

	// The storage pool type.
	Type string `json:"type,omitempty"`

	// The libvirt pool name.
	Pool string `json:"pool"`

	// The local Ceph Monitor(s) address or FQDN, empty for local pool type.
	CephAddress string `json:"ceph_address,omitempty"`

	// The local Ceph Monitor(s) port (default 3300), empty for local pool type.
	CephPort int32 `json:"ceph_port,omitempty"`

	// The libvirt secret UUID for CephX authentication, empty for local pool type.
	CephSecretUuid string `json:"ceph_secret_uuid,omitempty"`

	// Cost associated to the storage pool.
	Cost Cost `json:"cost,omitempty"`
}

// AssertStoragePoolRequired checks if the required fields are not zero-ed
func AssertStoragePoolRequired(obj StoragePool) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"pool": obj.Pool,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertStoragePoolConstraints checks if the values respects the defined constraints
func AssertStoragePoolConstraints(obj StoragePool) error {
	return nil
}
