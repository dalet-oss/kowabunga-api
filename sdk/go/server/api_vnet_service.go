/*
 * Kowabunga
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.10.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
	"net/http"
	"errors"
)

// VnetAPIService is a service that implements the logic for the VnetAPIServicer
// This service should implement the business logic for every endpoint for the VnetAPI API.
// Include any external packages or services that will be required by this service.
type VnetAPIService struct {
}

// NewVnetAPIService creates a default api service
func NewVnetAPIService() VnetAPIServicer {
	return &VnetAPIService{}
}

// CreateSubnet - 
func (s *VnetAPIService) CreateSubnet(ctx context.Context, vnetId string, body Subnet) (ImplResponse, error) {
	// TODO - update CreateSubnet with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Subnet{}) or use other options such as http.Ok ...
	// return Response(201, Subnet{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateSubnet method not implemented")
}

// CreateVNet - 
func (s *VnetAPIService) CreateVNet(ctx context.Context, zoneId string, body VNet) (ImplResponse, error) {
	// TODO - update CreateVNet with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, VNet{}) or use other options such as http.Ok ...
	// return Response(201, VNet{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateVNet method not implemented")
}

// DeleteVNet - 
func (s *VnetAPIService) DeleteVNet(ctx context.Context, vnetId string) (ImplResponse, error) {
	// TODO - update DeleteVNet with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	// return Response(409, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteVNet method not implemented")
}

// GetAllVNets - 
func (s *VnetAPIService) GetAllVNets(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAllVNets with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAllVNets method not implemented")
}

// GetVNet - 
func (s *VnetAPIService) GetVNet(ctx context.Context, vnetId string) (ImplResponse, error) {
	// TODO - update GetVNet with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, VNet{}) or use other options such as http.Ok ...
	// return Response(200, VNet{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetVNet method not implemented")
}

// GetVNetSubnets - 
func (s *VnetAPIService) GetVNetSubnets(ctx context.Context, vnetId string) (ImplResponse, error) {
	// TODO - update GetVNetSubnets with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetVNetSubnets method not implemented")
}

// GetZoneVNets - 
func (s *VnetAPIService) GetZoneVNets(ctx context.Context, zoneId string) (ImplResponse, error) {
	// TODO - update GetZoneVNets with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetZoneVNets method not implemented")
}

// UpdateVNet - 
func (s *VnetAPIService) UpdateVNet(ctx context.Context, vnetId string, body VNet) (ImplResponse, error) {
	// TODO - update UpdateVNet with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, VNet{}) or use other options such as http.Ok ...
	// return Response(200, VNet{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateVNet method not implemented")
}

// UpdateVNetDefaultSubnet - 
func (s *VnetAPIService) UpdateVNetDefaultSubnet(ctx context.Context, vnetId string, subnetId string) (ImplResponse, error) {
	// TODO - update UpdateVNetDefaultSubnet with the required logic for this service method.
	// Add api_vnet_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateVNetDefaultSubnet method not implemented")
}
