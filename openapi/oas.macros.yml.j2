{% macro Schema(schema, desc, required=[]) %}
    {{ schema }}:
      type: object
      description: A {{ desc }}
{%if required != [] %}
      required:
{% for r in required %}
        - {{ r }}
{% endfor %}
{% endif %}
      properties:
{% endmacro %}

{% macro Property(name, type, desc, default=None) %}
        {{ name }}:
          type: {{ type }}
          description: {{ desc }}
{% if default != None %}
          default: {{ default }}
{% endif %}
{% endmacro %}

{% macro StringProperty(name, desc, default=None) %}
{{ Property(name, 'string', desc, default) }}
{% endmacro %}

{% macro BoolProperty(name, desc, default=None) %}
{{ Property(name, 'boolean', desc, default) }}
{% endmacro %}

{% macro ArrayProperty(name, type, desc, default=None) %}
        {{ name }}:
          type: array
          description: {{ desc }}
          items:
            type: {{ type }}
{% if default != None %}
          default: {{ default }}
{% endif %}
{% endmacro %}

{% macro StringArrayProperty(name, desc, default=None) %}
{{ ArrayProperty(name, 'string', desc, default) }}
{% endmacro %}

{% macro PathParam(key, name, desc, t) %}
    {{ key }}:
      name: {{ name }}
      in: path
      description: {{ desc }}
      required: true
      schema:
        type: {{ t }}
{% endmacro %}

{% macro StringPathParam(key, name, desc) %}
{{ PathParam(key, name, desc, 'string') }}
{% endmacro %}

{% macro Tags(tgs) %}
      tags:
{% for t in tgs %}
        - {{ t }}
{% endfor %}
{% endmacro %}

{% macro ErrorsWrongParams() %}
        '400':
          $ref: '#/components/responses/BadRequest'
{% endmacro %}

{% macro ErrorsAuth() %}
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
{% endmacro %}

{% macro ErrorsUnknownResource() %}
        '404':
          $ref: '#/components/responses/NotFound'
{% endmacro %}

{% macro ErrorsConflict() %}
        '409':
          $ref: '#/components/responses/Conflict'
{% endmacro %}

{% macro ErrorsQuotas() %}
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
{% endmacro %}

{% macro ErrorsGetAll() %}
{{ ErrorsAuth() }}
{% endmacro %}

{% macro ErrorsGetOne() %}
{{ ErrorsAuth() }}
{{ ErrorsUnknownResource() }}
{% endmacro %}

{% macro ErrorsUpdate() %}
{{ ErrorsWrongParams() }}
{{ ErrorsGetOne() }}
{{ ErrorsQuotas() }}
{% endmacro %}

{% macro ErrorsDelete() %}
{{ ErrorsGetOne() }}
{{ ErrorsConflict() }}
{{ ErrorsQuotas() }}
{% endmacro %}

{% macro Parameters(params=[]) %}
{% if params != [] %}
    parameters:
{% for p in params %}
      - $ref: '#/components/parameters/{{ p }}'
{% endfor %}
{% endif %}
{% endmacro %}

{% macro ResponseOk(desc) %}
        '200':
          description: {{ desc }}
{% endmacro %}

{% macro GetResource(schema, desc) %}
        '200':
          description: {{ desc }}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{ schema }}'
{% endmacro %}

{% macro Payload(schema) %}
      requestBody:
        description: {{ schema }} payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{ schema }}'
        required: true
{% endmacro %}

{% macro GetOneResource(schema, desc) %}
{{ GetResource(schema, 'Returns the ' + desc + ' object') }}
{% endmacro %}

{% macro GetAllResource(desc) %}
{{ GetResource('ObjectIds', 'Returns an array of ' + desc + ' IDs') }}
{% endmacro %}

{% macro GetAll(opId, desc, tags) %}
    get:
{{ Tags(tags) }}
      description: Returns the IDs of {{ desc }} objects
      operationId: {{ opId }}
      responses:
{{ GetAllResource(desc) }}
{{ ErrorsGetAll() }}
{% endmacro %}

{% macro Read(opId, schema, desc, tags) %}
    get:
{{ Tags(tags) }}
      description: Returns a {{ desc }}
      operationId: {{ opId }}
      responses:
{{ GetOneResource(schema, desc) }}
{{ ErrorsGetOne() }}
{% endmacro %}

{% macro Update(opId, schema, desc, tags) %}
    put:
{{ Tags(tags) }}
      description: Updates a {{ desc }} configuration
      operationId: {{ opId }}
{{ Payload(schema) }}
      responses:
{{ GetOneResource(schema, desc) }}
{{ ErrorsUpdate() }}
{% endmacro %}

{% macro Delete(opId, desc, tags) %}
    delete:
{{ Tags(tags) }}
      description: Deletes an existing {{ desc }}
      operationId: {{ opId }}
      responses:
{{ ResponseOk('The ' + desc + ' has been successfully removed') }}
{{ ErrorsDelete() }}
{% endmacro %}

{% macro List(obj, tags, params=[]) %}
{{ Parameters(params) }}
{{ GetAll('List' + obj.schema + 's', resources.adapter.desc, [resources.adapter.tag]) }}
{% endmacro %}

{% macro RUD(obj, tags, params=[]) %}
{{ Parameters(params) }}
{{ Read('Read' + obj.schema, obj.schema, obj.desc, tags) }}
{{ Update('Update' + obj.schema, obj.schema, obj.desc, tags) }}
{{ Delete('Delete' + obj.schema, obj.desc, tags) }}
{% endmacro %}
