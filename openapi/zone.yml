definitions:
  Zone:
    type: object
    required: [name]
    properties:
      id:
        type: string
        description: The zone ID (auto-generated).
      name:
        type: string
        description: The zone name.
      description:
        type: string
        description: The zone description.

paths:
  /zone:
    get:
      tags:
        - zone
      operationId: GetAllZones
      description: Returns the IDs of registered zones.
      responses:
        200:
          description: Returns the an array of zone IDs.
          schema:
            type: array
            items:
              type: string

  /zone/{zoneId}:
    get:
      tags:
        - zone
      operationId: GetZone
      description: Returns a description of the zone
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to get.
      responses:
        200:
          description: Returns the zone object.
          schema:
            $ref: '#/definitions/Zone'
        404:
          description: Invalid zone ID was provided.
    put:
      tags:
        - zone
      operationId: UpdateZone
      description: Updates a zone configuration.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to get.
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Zone'
      responses:
        200:
          description: Returns the updated zone object.
          schema:
            $ref: '#/definitions/Zone'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid zone ID was provided.
    delete:
      tags:
        - zone
      operationId: DeleteZone
      description: Deletes an existing zone.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to get.
      responses:
        200:
          description: The zone has been successfully removed.
        404:
          description: Invalid zone ID was provided.
        409:
          description: The zone is not empty or still being referenced.
        500:
          description: Unable to delete zone.

  /zone/{zoneId}/netgw:
    post:
      tags:
        - zone
        - netgw
      operationId: CreateNetGW
      description: Creates a new network gateway.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: the ID of the associated zone.
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/NetGW'
      responses:
        201:
          description: Returns the newly created network gateway object.
          schema:
            $ref: '#/definitions/NetGW'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid zone ID was provided.
        409:
          description: Network gateway already exists.
        500:
          description: Unable to connect to network gateway.

  /zone/{zoneId}/netgws:
    get:
      tags:
        - zone
        - netgw
      operationId: GetZoneNetGWs
      description: Returns the IDs of the hosts existing in the zone.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to query.
      responses:
        200:
          description: Returns an array of network gateway IDs.
          schema:
            type: array
            items:
              type: string
        404:
          description: Invalid zone ID was provided.

  /zone/{zoneId}/host:
    post:
      tags:
        - zone
        - host
      operationId: CreateHost
      description: Creates a new host.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: the ID of the associated zone.
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        201:
          description: Returns the newly created host object.
          schema:
            $ref: '#/definitions/Host'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid zone ID was provided.
        409:
          description: Host already exists.
        500:
          description: Unable to connect to host's libvirt.

  /zone/{zoneId}/hosts:
    get:
      tags:
        - zone
        - host
      operationId: GetZoneHosts
      description: Returns the IDs of the hosts existing in the zone.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to query.
      responses:
        200:
          description: Returns an array of host IDs.
          schema:
            type: array
            items:
              type: string
        404:
          description: Invalid zone ID was provided.

  /zone/{zoneId}/pool:
    post:
      tags:
        - zone
        - pool
      operationId: CreatePool
      description: Creates a new storage pool.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: the ID of the associated zone.
        - name: hostId
          in: query
          type: string
          description: the ID of the associated host (useless for RBD pools, mandatory for local ones).
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StoragePool'
      responses:
        201:
          description: Returns the newly created storage pool object.
          schema:
            $ref: '#/definitions/StoragePool'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid zone ID was provided.
        409:
          description: Pool already exists.
        500:
          description: Unable to create storage pool.

  /zone/{zoneId}/pool/{poolId}/default:
    put:
      tags:
        - zone
        - pool
      operationId: UpdateZoneDefaultPool
      description: Set a zone's default storage pool.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to update.
        - name: poolId
          in: path
          type: string
          required: true
          description: The ID of the storage pool to set as default.
      responses:
        200:
          description: Returns the updated project resources object.
        404:
          description: Invalid zone ID or storage pool ID was provided.
        500:
          description: Unable to assign the requested storage pool as zone's default.

  /zone/{zoneId}/pools:
    get:
      tags:
        - zone
        - pool
      operationId: GetZonePools
      description: Returns the IDs of the pools existing in the zone.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to query.
      responses:
        200:
          description: Returns an array of storage pool IDs.
          schema:
            type: array
            items:
              type: string
        404:
          description: Invalid zone ID was provided.

  /zone/{zoneId}/nfs:
    get:
      tags:
        - zone
        - nfs
      operationId: GetZoneNfsStorages
      description: Returns the IDs of the NFS storages existing in the zone.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to query.
      responses:
        200:
          description: Returns an array of NFS storage IDs.
          schema:
            type: array
            items:
              type: string
        404:
          description: Invalid zone ID was provided.
    post:
      tags:
        - zone
        - nfs
      operationId: CreateNfsStorage
      description: Creates a new NFS storage.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: the ID of the associated zone.
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StorageNFS'
      responses:
        201:
          description: Returns the newly created NFS storage object.
          schema:
            $ref: '#/definitions/StorageNFS'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid zone ID was provided.
        409:
          description: NFS storage already exists.
        500:
          description: Unable to create NFS storage.

  /zone/{zoneId}/nfs/{nfsId}/default:
    put:
      tags:
        - zone
        - nfs
      operationId: UpdateZoneDefaultNfsStorage
      description: Set a zone's default NFS storage.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to update.
        - name: nfsId
          in: path
          type: string
          required: true
          description: The ID of the NFS storage to set as default.
      responses:
        200:
          description: Returns the updated zone resources object.
        404:
          description: Invalid zone ID or NFS storage ID was provided.
        500:
          description: Unable to assign the requested NFS storage as zone's default.

  /zone/{zoneId}/vnet:
    post:
      tags:
        - zone
        - vnet
      operationId: CreateVNet
      description: Creates a new virtual network.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: the ID of the associated zone.
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VNet'
      responses:
        201:
          description: Returns the newly created virtual network object.
          schema:
            $ref: '#/definitions/VNet'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid zone ID was provided.
        409:
          description: Virtual network already exists.
        500:
          description: Unable to create virtual network.

  /zone/{zoneId}/vnets:
    get:
      tags:
        - zone
        - vnet
      operationId: GetZoneVNets
      description: Returns the IDs of the virtual networks existing in the zone.
      parameters:
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to query.
      responses:
        200:
          description: Returns an array of virtual network IDs.
          schema:
            type: array
            items:
              type: string
        404:
          description: Invalid zone ID was provided.
