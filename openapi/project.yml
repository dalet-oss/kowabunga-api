definitions:
  Project:
    type: object
    required: [name, email]
    properties:
      id:
        type: string
        description: The project ID (auto-generated).
      name:
        type: string
        description: The project name.
      description:
        type: string
        description: The project description.
      email:
        type: string
        description: The project associated email address, used to receive notifications.
      tags:
        type: array
        description: A list of tags to be associated to the project.
        items:
          type: string
      metadatas:
        type: array
        description: A list of metadata to be associated to the project
        items:
          $ref: '#/definitions/Metadata'

  ProjectResources:
    type: object
    description: The global project resource quotas/usage (0 for unlimited).
    properties:
      vcpus:
        type: integer
        format: uint16
        description: the maximum total number of vCPUs allowed to be consumed by sum of all instances.
      memory:
        type: integer
        format: uint64
        description: the maximum total memory (in bytes) allowed to be consumed by sum of all instances.
      storage:
        type: integer
        format: uint64
        description: the maximum total disk capacity allowed to be consumed by sum of all instances.
      instances:
        type: integer
        format: uint16
        description: the maximum number of instances allowed to be spawned.

paths:
  /project:
    get:
      tags:
        - project
      operationId: GetAllProjects
      description: Returns the IDs of registered projects.
      responses:
        200:
          description: Returns the an array of project IDs.
          schema:
            type: array
            items:
              type: string
    post:
      tags:
        - project
      operationId: CreateProject
      description: Creates a new project.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        201:
          description: Returns the newly created project object.
          schema:
            $ref: '#/definitions/Project'
        400:
          description: Bad parameters were provided.
        409:
          description: Project already exists.
        500:
          description: Unable to create the requested project.

  /project/{projectId}:
    get:
      tags:
        - project
      operationId: GetProject
      description: Returns a description of the project
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to get.
      responses:
        200:
          description: Returns the project object.
          schema:
            $ref: '#/definitions/Project'
        404:
          description: Invalid project ID was provided.
    put:
      tags:
        - project
      operationId: UpdateProject
      description: Updates a project configuration.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to update.
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Project'
      responses:
        200:
          description: Returns the updated project object.
          schema:
            $ref: '#/definitions/Project'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid project ID was provided.
    delete:
      tags:
        - project
      operationId: DeleteProject
      description: Deletes an existing project.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to delete.
      responses:
        200:
          description: The project has been successfully removed.
        404:
          description: Invalid project ID was provided.
        409:
          description: The project is not empty or still being referenced.
        500:
          description: Unable to delete project.

  /project/{projectId}/usage:
    get:
      tags:
        - project
      operationId: GetProjectUsage
      description: Returns the current resources usage for the project.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to query.
      responses:
        200:
          description: Returns the project resources object.
          schema:
            $ref: '#/definitions/ProjectResources'
        404:
          description: Invalid project ID was provided.

  /project/{projectId}/quotas:
    get:
      tags:
        - project
      operationId: GetProjectQuotas
      description: Returns the quotas set for the project.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to query.
      responses:
        200:
          description: Returns the project resources object.
          schema:
            $ref: '#/definitions/ProjectResources'
        404:
          description: Invalid project ID was provided.
    put:
      tags:
        - project
      operationId: UpdateProjectQuotas
      description: Updates a project's quotas.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to update.
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectResources'
      responses:
        200:
          description: Returns the updated project resources object.
          schema:
            $ref: '#/definitions/ProjectResources'
        404:
          description: Invalid project ID was provided.
    delete:
      tags:
        - project
      operationId: ResetProjectQuotas
      description: Reset project's quotas to default value.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to query.
      responses:
        200:
          description: The project quotas have been successfully reset.
        404:
          description: Invalid project ID was provided.

  /project/{projectId}/volume:
    post:
      tags:
        - project
        - volume
      operationId: CreateVolume
      description: Creates a new storage volume.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: the ID of the associated project.
        - name: poolId
          in: query
          type: string
          required: true
          description: the ID of the associated storage pool.
        - name: templateId
          in: query
          type: string
          required: true
          description: the ID of the template to clone the storage volume from.
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Volume'
      responses:
        201:
          description: Returns the newly created storage volume object.
          schema:
            $ref: '#/definitions/Volume'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid project ID was provided.
        409:
          description: Storage volume already exists.
        500:
          description: Unable to create the storage volume.
        507:
          description: Requested volume characteristics are beyond project's quota in place.

  /project/{projectId}/volumes:
    get:
      tags:
        - project
        - volume
      operationId: GetProjectVolumes
      description: Returns the IDs of the storage volumes existing in the project.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to query.
      responses:
        200:
          description: Returns an array of storage volume IDs.
          schema:
            type: array
            items:
              type: string
        404:
          description: Invalid project ID was provided.

  /project/{projectId}/zone/{zoneId}/volume:
    post:
      tags:
        - project
        - zone
        - volume
      operationId: CreateZoneVolume
      description: Creates a new storage volume in specified zone.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: the ID of the associated project.
        - name: zoneId
          in: path
          type: string
          required: true
          description: the ID of the associated zone.
        - name: poolId
          in: query
          type: string
          description: the ID of the associated storage pool (optional, zone's default if unspecified).
        - name: templateId
          in: query
          type: string
          description: the ID of the template to clone the storage volume from (optional, zone's default if unspecified)
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Volume'
      responses:
        201:
          description: Returns the newly created storage volume object.
          schema:
            $ref: '#/definitions/Volume'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid project or zone ID was provided.
        409:
          description: Storage volume already exists.
        500:
          description: Unable to create the storage volume.
        507:
          description: Requested volume characteristics are beyond project's quota in place.

  /project/{projectId}/zone/{zoneId}/volumes:
    get:
      tags:
        - project
        - zone
        - volume
      operationId: GetProjectZoneVolumes
      description: Returns the IDs of the storage volumes existing in the project in the specified zone.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to query.
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to query.
      responses:
        200:
          description: Returns an array of storage volume IDs.
          schema:
            type: array
            items:
              type: string
        404:
          description: Invalid project or zone ID was provided.

  /project/{projectId}/zone/{zoneId}/instance:
    post:
      tags:
        - project
        - zone
        - instance
      operationId: CreateZoneInstance
      description: Creates a new virtual machine instance in specified zone.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: the ID of the associated project.
        - name: zoneId
          in: path
          type: string
          required: true
          description: the ID of the associated zone.
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Instance'
      responses:
        201:
          description: Returns the newly created virtual machine instance object.
          schema:
            $ref: '#/definitions/Instance'
        400:
          description: Bad parameters were provided.
        404:
          description: Invalid project or zone ID was provided.
        409:
          description: Virtual machine instance already exists.
        500:
          description: Unable to create the virtual machine instance.
        507:
          description: Requested volume characteristics are beyond project's quota in place.

  /project/{projectId}/zone/{zoneId}/instances:
    get:
      tags:
        - project
        - zone
        - instance
      operationId: GetProjectZoneInstances
      description: Returns the IDs of the virtual machine instances existing in the project in the specified zone.
      parameters:
        - name: projectId
          in: path
          type: string
          required: true
          description: The ID of the project to query.
        - name: zoneId
          in: path
          type: string
          required: true
          description: The ID of the zone to query.
      responses:
        200:
          description: Returns an array of virtual machine instance IDs.
          schema:
            type: array
            items:
              type: string
        404:
          description: Invalid project or zone ID was provided.
