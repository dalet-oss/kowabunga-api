{%- import "openapi/oas.macros.yml.j2" as oas with context %}

components:
  schemas:
{{ oas.SchemaBaseResource(resources.host, ['name', 'protocol', 'address']) }}
{{ oas.StringProperty('name', 'The host name') }}
{{ oas.StringProperty('description', 'The host description') }}
        protocol:
          type: string
          description: The protocol to use to issue libvirt connection.
          enum:
            - tcp
            - tls
        address:
          type: string
          description: The host libvirt's IPv4 address.
        port:
          type: integer
          description: The host libvirt's port.
        tls:
          type: object
          required:
            - key
            - cert
            - ca
          description: The host libvirt's TLS configuration.
          properties:
            key:
              type: string
              description: The TLS client private key.
            cert:
              type: string
              description: The TLS client public cert.
            ca:
              type: string
              description: The TLS certificate of authority.
        cost:
          type: object
          description: Global cost associated to the host (deprecated, will be removed).
          $ref: '#/components/schemas/Cost'
        cpu_cost:
          type: object
          description: Cost associated to the host's CPU resources.
          $ref: '#/components/schemas/Cost'
        memory_cost:
          type: object
          description: Cost associated to the host's memory resources.
          $ref: '#/components/schemas/Cost'
        overcommit_cpu_ratio:
          type: integer
          description: The host CPU resource over-commit ratio. Overcommitting CPU resources for VMs means allocating more virtual CPUs (vCPUs) to the virtual machines (VMs) than the physical cores available on the host. This can help optimize the utilization of the host CPU and increase the density of VMs per host.
          default: 3
        overcommit_memory_ratio:
          type: integer
          description: The host memory resource over-commit ratio. Memory overcommitment is a concept in computing that covers the assignment of more memory to virtual computing devices (or processes) than the physical machine they are hosted, or running on, actually has.
          default: 2

    HostCaps:
      type: object
      required:
        - version
        - uuid
        - cpu
        - memory
      properties:
        version:
          type: string
          description: The host libvirt version.
        uuid:
          type: string
          description: the host UUID
        cpu:
          type: object
          required:
            - arch
            - model
            - vendor
            - sockets
            - cores
            - threads
          description: the host CPU characteristics
          properties:
            arch:
              type: string
              description: the host CPU architecture
            model:
              type: string
              description: the host CPU model
            vendor:
              type: string
              description: the host CPU vendor
            sockets:
              type: integer
              description: the host CPU number of sockets
            cores:
              type: integer
              description: the host CPU number of cores
            threads:
              type: integer
              description: the host CPU number of threads
            memory:
              type: integer
              description: the host memory size in bytes
  parameters:
    HostID:
      name: hostId
      in: path
      description: The ID of the computing host.
      schema:
        type: string
      required: true
    OptionalQueryHostID:
      name: hostId
      in: query
      description: The ID of the computing host (useless for RBD pools, mandatory for local ones).
      schema:
        type: string

paths:
  /host:
    get:
      tags:
        - host
      description: Returns the IDs of registered hosts.
      operationId: GetAllHosts
      responses:
        '200':
          description: Returns the an array of computing hosts IDs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIds'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /host/{hostId}:
    parameters:
      - $ref: '#/components/parameters/HostID'

    get:
      tags:
        - host
      description: Returns a description of the host
      operationId: GetHost
      responses:
        '200':
          description: Returns the computing host object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - host
      description: Updates a host configuration.
      operationId: UpdateHost
      requestBody:
        description: Host payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
        required: true
      responses:
        '200':
          description: Updated computing host.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

    delete:
      tags:
        - host
      description: Deletes an existing host.
      operationId: DeleteHost
      responses:
        '200':
          description: The computing host has been successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /host/{hostId}/caps:
    parameters:
      - $ref: '#/components/parameters/HostID'

    get:
      tags:
        - host
      description: Returns the host capabilities.
      operationId: GetHostCaps
      responses:
        '200':
          description: Returns the computing host capabilities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostCaps'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /host/{hostId}/instances:
    parameters:
      - $ref: '#/components/parameters/HostID'

    get:
      tags:
        - host
        - instance
      operationId: GetHostInstances
      description: Returns the UUIDs of the virtual machines running on the host.
      responses:
        '200':
          description: Returns the an array of virtual machine UUIDs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectIds'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
