{%- import "openapi/oas.macros.yml.j2" as oas with context %}

components:
  schemas:
{{ oas.SchemaBaseResource(resources.host, ['name', 'protocol', 'address']) }}
{{ oas.StringProperty('protocol', 'The protocol to use to issue libvirt connection', values=['tcp', 'tls']) }}
{{ oas.StringProperty('address', "The host libvirt's IPv4 address") }}
{{ oas.IntProperty('port', "The host libvirt's port") }}
        tls:
          type: object
          required:
            - key
            - cert
            - ca
          description: The host libvirt's TLS configuration.
          properties:
            key:
              type: string
              description: The TLS client private key.
            cert:
              type: string
              description: The TLS client public cert.
            ca:
              type: string
              description: The TLS certificate of authority.
{{ oas.ObjectProperty('cost', 'Global cost associated to the host (deprecated, will be removed)', 'Cost') }}
{{ oas.ObjectProperty('cpu_cost', "Cost associated to the host's CPU resources", 'Cost') }}
{{ oas.ObjectProperty('memory_cost', "Cost associated to the host's memoery resources", 'Cost') }}
{{ oas.IntProperty('overcommit_cpu_ratio', 'The host CPU resource over-commit ratio. Overcommitting CPU resources for VMs means allocating more virtual CPUs (vCPUs) to the virtual machines (VMs) than the physical cores available on the host. This can help optimize the utilization of the host CPU and increase the density of VMs per host', default=3) }}
{{ oas.IntProperty('overcommit_memory_ratio', 'The host memory resource over-commit ratio. Memory overcommitment is a concept in computing that covers the assignment of more memory to virtual computing devices (or processes) than the physical machine they are hosted, or running on, actually has', default=2) }}

    HostCaps:
      type: object
      required:
        - version
        - uuid
        - cpu
        - memory
      properties:
        version:
          type: string
          description: The host libvirt version.
        uuid:
          type: string
          description: the host UUID
        cpu:
          type: object
          required:
            - arch
            - model
            - vendor
            - sockets
            - cores
            - threads
          description: the host CPU characteristics
          properties:
            arch:
              type: string
              description: the host CPU architecture
            model:
              type: string
              description: the host CPU model
            vendor:
              type: string
              description: the host CPU vendor
            sockets:
              type: integer
              description: the host CPU number of sockets
            cores:
              type: integer
              description: the host CPU number of cores
            threads:
              type: integer
              description: the host CPU number of threads
            memory:
              type: integer
              description: the host memory size in bytes

  parameters:
{{ oas.PathParamID(resources.host) }}
{{ oas.StringQueryParam(resources.host.paramSchema, resources.host.paramId, 'The ID of the computing host (useless for RBD pools, mandatory for local ones)') }}

paths:
  /host:
{{ oas.List(resources.host, [resources.host.tag]) }}

  /host/{ {{ resources.host.paramId }} }:
{{ oas.RUD(resources.host, [resources.host.tag], [resources.host.paramSchema]) }}

  /host/{hostId}/caps:
{{ oas.Parameters([resources.host.paramSchema]) }}
{{ oas.Read('ReadHostCaps', 'HostCaps', resources.host.desc + ' capabilities', [resources.host.tag]) }}

  /host/{hostId}/instances:
{{ oas.Parameters([resources.host.paramSchema]) }}
{{ oas.GetAll('ListHostInstances', resources.instance.desc, [resources.host.tag, resources.instance.tag], True) }}
