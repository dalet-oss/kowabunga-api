// Code generated by go-swagger; DO NOT EDIT.

package region

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// CreateZoneReader is a Reader for the CreateZone structure.
type CreateZoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateZoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateZoneCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateZoneBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateZoneNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateZoneConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateZoneInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /region/{regionId}/zone] CreateZone", response, response.Code())
	}
}

// NewCreateZoneCreated creates a CreateZoneCreated with default headers values
func NewCreateZoneCreated() *CreateZoneCreated {
	return &CreateZoneCreated{}
}

/*
CreateZoneCreated describes a response with status code 201, with default header values.

Returns the newly created zone object.
*/
type CreateZoneCreated struct {
	Payload *models.Zone
}

// IsSuccess returns true when this create zone created response has a 2xx status code
func (o *CreateZoneCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create zone created response has a 3xx status code
func (o *CreateZoneCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone created response has a 4xx status code
func (o *CreateZoneCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create zone created response has a 5xx status code
func (o *CreateZoneCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone created response a status code equal to that given
func (o *CreateZoneCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create zone created response
func (o *CreateZoneCreated) Code() int {
	return 201
}

func (o *CreateZoneCreated) Error() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneCreated  %+v", 201, o.Payload)
}

func (o *CreateZoneCreated) String() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneCreated  %+v", 201, o.Payload)
}

func (o *CreateZoneCreated) GetPayload() *models.Zone {
	return o.Payload
}

func (o *CreateZoneCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateZoneBadRequest creates a CreateZoneBadRequest with default headers values
func NewCreateZoneBadRequest() *CreateZoneBadRequest {
	return &CreateZoneBadRequest{}
}

/*
CreateZoneBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateZoneBadRequest struct {
}

// IsSuccess returns true when this create zone bad request response has a 2xx status code
func (o *CreateZoneBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone bad request response has a 3xx status code
func (o *CreateZoneBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone bad request response has a 4xx status code
func (o *CreateZoneBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create zone bad request response has a 5xx status code
func (o *CreateZoneBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone bad request response a status code equal to that given
func (o *CreateZoneBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create zone bad request response
func (o *CreateZoneBadRequest) Code() int {
	return 400
}

func (o *CreateZoneBadRequest) Error() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneBadRequest ", 400)
}

func (o *CreateZoneBadRequest) String() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneBadRequest ", 400)
}

func (o *CreateZoneBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateZoneNotFound creates a CreateZoneNotFound with default headers values
func NewCreateZoneNotFound() *CreateZoneNotFound {
	return &CreateZoneNotFound{}
}

/*
CreateZoneNotFound describes a response with status code 404, with default header values.

Invalid region ID was provided.
*/
type CreateZoneNotFound struct {
}

// IsSuccess returns true when this create zone not found response has a 2xx status code
func (o *CreateZoneNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone not found response has a 3xx status code
func (o *CreateZoneNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone not found response has a 4xx status code
func (o *CreateZoneNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create zone not found response has a 5xx status code
func (o *CreateZoneNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone not found response a status code equal to that given
func (o *CreateZoneNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create zone not found response
func (o *CreateZoneNotFound) Code() int {
	return 404
}

func (o *CreateZoneNotFound) Error() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneNotFound ", 404)
}

func (o *CreateZoneNotFound) String() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneNotFound ", 404)
}

func (o *CreateZoneNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateZoneConflict creates a CreateZoneConflict with default headers values
func NewCreateZoneConflict() *CreateZoneConflict {
	return &CreateZoneConflict{}
}

/*
CreateZoneConflict describes a response with status code 409, with default header values.

Zone already exists.
*/
type CreateZoneConflict struct {
}

// IsSuccess returns true when this create zone conflict response has a 2xx status code
func (o *CreateZoneConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone conflict response has a 3xx status code
func (o *CreateZoneConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone conflict response has a 4xx status code
func (o *CreateZoneConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create zone conflict response has a 5xx status code
func (o *CreateZoneConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone conflict response a status code equal to that given
func (o *CreateZoneConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create zone conflict response
func (o *CreateZoneConflict) Code() int {
	return 409
}

func (o *CreateZoneConflict) Error() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneConflict ", 409)
}

func (o *CreateZoneConflict) String() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneConflict ", 409)
}

func (o *CreateZoneConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateZoneInternalServerError creates a CreateZoneInternalServerError with default headers values
func NewCreateZoneInternalServerError() *CreateZoneInternalServerError {
	return &CreateZoneInternalServerError{}
}

/*
CreateZoneInternalServerError describes a response with status code 500, with default header values.

Unable to create zone.
*/
type CreateZoneInternalServerError struct {
}

// IsSuccess returns true when this create zone internal server error response has a 2xx status code
func (o *CreateZoneInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone internal server error response has a 3xx status code
func (o *CreateZoneInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone internal server error response has a 4xx status code
func (o *CreateZoneInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create zone internal server error response has a 5xx status code
func (o *CreateZoneInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create zone internal server error response a status code equal to that given
func (o *CreateZoneInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create zone internal server error response
func (o *CreateZoneInternalServerError) Code() int {
	return 500
}

func (o *CreateZoneInternalServerError) Error() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneInternalServerError ", 500)
}

func (o *CreateZoneInternalServerError) String() string {
	return fmt.Sprintf("[POST /region/{regionId}/zone][%d] createZoneInternalServerError ", 500)
}

func (o *CreateZoneInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
