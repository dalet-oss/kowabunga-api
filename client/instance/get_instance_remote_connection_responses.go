// Code generated by go-swagger; DO NOT EDIT.

package instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// GetInstanceRemoteConnectionReader is a Reader for the GetInstanceRemoteConnection structure.
type GetInstanceRemoteConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstanceRemoteConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstanceRemoteConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetInstanceRemoteConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /instance/{instanceId}/connect] GetInstanceRemoteConnection", response, response.Code())
	}
}

// NewGetInstanceRemoteConnectionOK creates a GetInstanceRemoteConnectionOK with default headers values
func NewGetInstanceRemoteConnectionOK() *GetInstanceRemoteConnectionOK {
	return &GetInstanceRemoteConnectionOK{}
}

/*
GetInstanceRemoteConnectionOK describes a response with status code 200, with default header values.

Returns the virtual machine remote connection URL.
*/
type GetInstanceRemoteConnectionOK struct {
	Payload *models.InstanceRemoteAccess
}

// IsSuccess returns true when this get instance remote connection o k response has a 2xx status code
func (o *GetInstanceRemoteConnectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get instance remote connection o k response has a 3xx status code
func (o *GetInstanceRemoteConnectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get instance remote connection o k response has a 4xx status code
func (o *GetInstanceRemoteConnectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get instance remote connection o k response has a 5xx status code
func (o *GetInstanceRemoteConnectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get instance remote connection o k response a status code equal to that given
func (o *GetInstanceRemoteConnectionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get instance remote connection o k response
func (o *GetInstanceRemoteConnectionOK) Code() int {
	return 200
}

func (o *GetInstanceRemoteConnectionOK) Error() string {
	return fmt.Sprintf("[GET /instance/{instanceId}/connect][%d] getInstanceRemoteConnectionOK  %+v", 200, o.Payload)
}

func (o *GetInstanceRemoteConnectionOK) String() string {
	return fmt.Sprintf("[GET /instance/{instanceId}/connect][%d] getInstanceRemoteConnectionOK  %+v", 200, o.Payload)
}

func (o *GetInstanceRemoteConnectionOK) GetPayload() *models.InstanceRemoteAccess {
	return o.Payload
}

func (o *GetInstanceRemoteConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InstanceRemoteAccess)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstanceRemoteConnectionNotFound creates a GetInstanceRemoteConnectionNotFound with default headers values
func NewGetInstanceRemoteConnectionNotFound() *GetInstanceRemoteConnectionNotFound {
	return &GetInstanceRemoteConnectionNotFound{}
}

/*
GetInstanceRemoteConnectionNotFound describes a response with status code 404, with default header values.

Invalid instance ID was provided.
*/
type GetInstanceRemoteConnectionNotFound struct {
}

// IsSuccess returns true when this get instance remote connection not found response has a 2xx status code
func (o *GetInstanceRemoteConnectionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get instance remote connection not found response has a 3xx status code
func (o *GetInstanceRemoteConnectionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get instance remote connection not found response has a 4xx status code
func (o *GetInstanceRemoteConnectionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get instance remote connection not found response has a 5xx status code
func (o *GetInstanceRemoteConnectionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get instance remote connection not found response a status code equal to that given
func (o *GetInstanceRemoteConnectionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get instance remote connection not found response
func (o *GetInstanceRemoteConnectionNotFound) Code() int {
	return 404
}

func (o *GetInstanceRemoteConnectionNotFound) Error() string {
	return fmt.Sprintf("[GET /instance/{instanceId}/connect][%d] getInstanceRemoteConnectionNotFound ", 404)
}

func (o *GetInstanceRemoteConnectionNotFound) String() string {
	return fmt.Sprintf("[GET /instance/{instanceId}/connect][%d] getInstanceRemoteConnectionNotFound ", 404)
}

func (o *GetInstanceRemoteConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
