// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// CreatePoolReader is a Reader for the CreatePool structure.
type CreatePoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreatePoolCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreatePoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreatePoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreatePoolConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreatePoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /zone/{zoneId}/pool] CreatePool", response, response.Code())
	}
}

// NewCreatePoolCreated creates a CreatePoolCreated with default headers values
func NewCreatePoolCreated() *CreatePoolCreated {
	return &CreatePoolCreated{}
}

/*
CreatePoolCreated describes a response with status code 201, with default header values.

Returns the newly created storage pool object.
*/
type CreatePoolCreated struct {
	Payload *models.StoragePool
}

// IsSuccess returns true when this create pool created response has a 2xx status code
func (o *CreatePoolCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create pool created response has a 3xx status code
func (o *CreatePoolCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pool created response has a 4xx status code
func (o *CreatePoolCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create pool created response has a 5xx status code
func (o *CreatePoolCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create pool created response a status code equal to that given
func (o *CreatePoolCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create pool created response
func (o *CreatePoolCreated) Code() int {
	return 201
}

func (o *CreatePoolCreated) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolCreated  %+v", 201, o.Payload)
}

func (o *CreatePoolCreated) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolCreated  %+v", 201, o.Payload)
}

func (o *CreatePoolCreated) GetPayload() *models.StoragePool {
	return o.Payload
}

func (o *CreatePoolCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoragePool)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePoolBadRequest creates a CreatePoolBadRequest with default headers values
func NewCreatePoolBadRequest() *CreatePoolBadRequest {
	return &CreatePoolBadRequest{}
}

/*
CreatePoolBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreatePoolBadRequest struct {
}

// IsSuccess returns true when this create pool bad request response has a 2xx status code
func (o *CreatePoolBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pool bad request response has a 3xx status code
func (o *CreatePoolBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pool bad request response has a 4xx status code
func (o *CreatePoolBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pool bad request response has a 5xx status code
func (o *CreatePoolBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create pool bad request response a status code equal to that given
func (o *CreatePoolBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create pool bad request response
func (o *CreatePoolBadRequest) Code() int {
	return 400
}

func (o *CreatePoolBadRequest) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolBadRequest ", 400)
}

func (o *CreatePoolBadRequest) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolBadRequest ", 400)
}

func (o *CreatePoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePoolNotFound creates a CreatePoolNotFound with default headers values
func NewCreatePoolNotFound() *CreatePoolNotFound {
	return &CreatePoolNotFound{}
}

/*
CreatePoolNotFound describes a response with status code 404, with default header values.

Invalid zone ID was provided.
*/
type CreatePoolNotFound struct {
}

// IsSuccess returns true when this create pool not found response has a 2xx status code
func (o *CreatePoolNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pool not found response has a 3xx status code
func (o *CreatePoolNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pool not found response has a 4xx status code
func (o *CreatePoolNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pool not found response has a 5xx status code
func (o *CreatePoolNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create pool not found response a status code equal to that given
func (o *CreatePoolNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create pool not found response
func (o *CreatePoolNotFound) Code() int {
	return 404
}

func (o *CreatePoolNotFound) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolNotFound ", 404)
}

func (o *CreatePoolNotFound) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolNotFound ", 404)
}

func (o *CreatePoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePoolConflict creates a CreatePoolConflict with default headers values
func NewCreatePoolConflict() *CreatePoolConflict {
	return &CreatePoolConflict{}
}

/*
CreatePoolConflict describes a response with status code 409, with default header values.

Pool already exists.
*/
type CreatePoolConflict struct {
}

// IsSuccess returns true when this create pool conflict response has a 2xx status code
func (o *CreatePoolConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pool conflict response has a 3xx status code
func (o *CreatePoolConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pool conflict response has a 4xx status code
func (o *CreatePoolConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pool conflict response has a 5xx status code
func (o *CreatePoolConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create pool conflict response a status code equal to that given
func (o *CreatePoolConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create pool conflict response
func (o *CreatePoolConflict) Code() int {
	return 409
}

func (o *CreatePoolConflict) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolConflict ", 409)
}

func (o *CreatePoolConflict) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolConflict ", 409)
}

func (o *CreatePoolConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePoolInternalServerError creates a CreatePoolInternalServerError with default headers values
func NewCreatePoolInternalServerError() *CreatePoolInternalServerError {
	return &CreatePoolInternalServerError{}
}

/*
CreatePoolInternalServerError describes a response with status code 500, with default header values.

Unable to create storage pool.
*/
type CreatePoolInternalServerError struct {
}

// IsSuccess returns true when this create pool internal server error response has a 2xx status code
func (o *CreatePoolInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pool internal server error response has a 3xx status code
func (o *CreatePoolInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pool internal server error response has a 4xx status code
func (o *CreatePoolInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create pool internal server error response has a 5xx status code
func (o *CreatePoolInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create pool internal server error response a status code equal to that given
func (o *CreatePoolInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create pool internal server error response
func (o *CreatePoolInternalServerError) Code() int {
	return 500
}

func (o *CreatePoolInternalServerError) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolInternalServerError ", 500)
}

func (o *CreatePoolInternalServerError) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/pool][%d] createPoolInternalServerError ", 500)
}

func (o *CreatePoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
