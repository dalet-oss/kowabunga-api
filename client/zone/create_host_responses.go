// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// CreateHostReader is a Reader for the CreateHost structure.
type CreateHostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateHostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateHostCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateHostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateHostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateHostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateHostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateHostCreated creates a CreateHostCreated with default headers values
func NewCreateHostCreated() *CreateHostCreated {
	return &CreateHostCreated{}
}

/*
CreateHostCreated describes a response with status code 201, with default header values.

Returns the newly created host object.
*/
type CreateHostCreated struct {
	Payload *models.Host
}

// IsSuccess returns true when this create host created response has a 2xx status code
func (o *CreateHostCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create host created response has a 3xx status code
func (o *CreateHostCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create host created response has a 4xx status code
func (o *CreateHostCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create host created response has a 5xx status code
func (o *CreateHostCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create host created response a status code equal to that given
func (o *CreateHostCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create host created response
func (o *CreateHostCreated) Code() int {
	return 201
}

func (o *CreateHostCreated) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostCreated  %+v", 201, o.Payload)
}

func (o *CreateHostCreated) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostCreated  %+v", 201, o.Payload)
}

func (o *CreateHostCreated) GetPayload() *models.Host {
	return o.Payload
}

func (o *CreateHostCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Host)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHostBadRequest creates a CreateHostBadRequest with default headers values
func NewCreateHostBadRequest() *CreateHostBadRequest {
	return &CreateHostBadRequest{}
}

/*
CreateHostBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateHostBadRequest struct {
}

// IsSuccess returns true when this create host bad request response has a 2xx status code
func (o *CreateHostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create host bad request response has a 3xx status code
func (o *CreateHostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create host bad request response has a 4xx status code
func (o *CreateHostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create host bad request response has a 5xx status code
func (o *CreateHostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create host bad request response a status code equal to that given
func (o *CreateHostBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create host bad request response
func (o *CreateHostBadRequest) Code() int {
	return 400
}

func (o *CreateHostBadRequest) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostBadRequest ", 400)
}

func (o *CreateHostBadRequest) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostBadRequest ", 400)
}

func (o *CreateHostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHostNotFound creates a CreateHostNotFound with default headers values
func NewCreateHostNotFound() *CreateHostNotFound {
	return &CreateHostNotFound{}
}

/*
CreateHostNotFound describes a response with status code 404, with default header values.

Invalid zone ID was provided.
*/
type CreateHostNotFound struct {
}

// IsSuccess returns true when this create host not found response has a 2xx status code
func (o *CreateHostNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create host not found response has a 3xx status code
func (o *CreateHostNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create host not found response has a 4xx status code
func (o *CreateHostNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create host not found response has a 5xx status code
func (o *CreateHostNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create host not found response a status code equal to that given
func (o *CreateHostNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create host not found response
func (o *CreateHostNotFound) Code() int {
	return 404
}

func (o *CreateHostNotFound) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostNotFound ", 404)
}

func (o *CreateHostNotFound) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostNotFound ", 404)
}

func (o *CreateHostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHostConflict creates a CreateHostConflict with default headers values
func NewCreateHostConflict() *CreateHostConflict {
	return &CreateHostConflict{}
}

/*
CreateHostConflict describes a response with status code 409, with default header values.

Host already exists.
*/
type CreateHostConflict struct {
}

// IsSuccess returns true when this create host conflict response has a 2xx status code
func (o *CreateHostConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create host conflict response has a 3xx status code
func (o *CreateHostConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create host conflict response has a 4xx status code
func (o *CreateHostConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create host conflict response has a 5xx status code
func (o *CreateHostConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create host conflict response a status code equal to that given
func (o *CreateHostConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create host conflict response
func (o *CreateHostConflict) Code() int {
	return 409
}

func (o *CreateHostConflict) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostConflict ", 409)
}

func (o *CreateHostConflict) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostConflict ", 409)
}

func (o *CreateHostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateHostInternalServerError creates a CreateHostInternalServerError with default headers values
func NewCreateHostInternalServerError() *CreateHostInternalServerError {
	return &CreateHostInternalServerError{}
}

/*
CreateHostInternalServerError describes a response with status code 500, with default header values.

Unable to connect to host's libvirt.
*/
type CreateHostInternalServerError struct {
}

// IsSuccess returns true when this create host internal server error response has a 2xx status code
func (o *CreateHostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create host internal server error response has a 3xx status code
func (o *CreateHostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create host internal server error response has a 4xx status code
func (o *CreateHostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create host internal server error response has a 5xx status code
func (o *CreateHostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create host internal server error response a status code equal to that given
func (o *CreateHostInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create host internal server error response
func (o *CreateHostInternalServerError) Code() int {
	return 500
}

func (o *CreateHostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostInternalServerError ", 500)
}

func (o *CreateHostInternalServerError) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/host][%d] createHostInternalServerError ", 500)
}

func (o *CreateHostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
