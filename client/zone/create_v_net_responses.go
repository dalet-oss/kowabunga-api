// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// CreateVNetReader is a Reader for the CreateVNet structure.
type CreateVNetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVNetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateVNetCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateVNetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateVNetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateVNetConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateVNetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateVNetCreated creates a CreateVNetCreated with default headers values
func NewCreateVNetCreated() *CreateVNetCreated {
	return &CreateVNetCreated{}
}

/*
CreateVNetCreated describes a response with status code 201, with default header values.

Returns the newly created virtual network object.
*/
type CreateVNetCreated struct {
	Payload *models.VNet
}

// IsSuccess returns true when this create v net created response has a 2xx status code
func (o *CreateVNetCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create v net created response has a 3xx status code
func (o *CreateVNetCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v net created response has a 4xx status code
func (o *CreateVNetCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create v net created response has a 5xx status code
func (o *CreateVNetCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create v net created response a status code equal to that given
func (o *CreateVNetCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create v net created response
func (o *CreateVNetCreated) Code() int {
	return 201
}

func (o *CreateVNetCreated) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetCreated  %+v", 201, o.Payload)
}

func (o *CreateVNetCreated) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetCreated  %+v", 201, o.Payload)
}

func (o *CreateVNetCreated) GetPayload() *models.VNet {
	return o.Payload
}

func (o *CreateVNetCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VNet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVNetBadRequest creates a CreateVNetBadRequest with default headers values
func NewCreateVNetBadRequest() *CreateVNetBadRequest {
	return &CreateVNetBadRequest{}
}

/*
CreateVNetBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateVNetBadRequest struct {
}

// IsSuccess returns true when this create v net bad request response has a 2xx status code
func (o *CreateVNetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v net bad request response has a 3xx status code
func (o *CreateVNetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v net bad request response has a 4xx status code
func (o *CreateVNetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create v net bad request response has a 5xx status code
func (o *CreateVNetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create v net bad request response a status code equal to that given
func (o *CreateVNetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create v net bad request response
func (o *CreateVNetBadRequest) Code() int {
	return 400
}

func (o *CreateVNetBadRequest) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetBadRequest ", 400)
}

func (o *CreateVNetBadRequest) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetBadRequest ", 400)
}

func (o *CreateVNetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVNetNotFound creates a CreateVNetNotFound with default headers values
func NewCreateVNetNotFound() *CreateVNetNotFound {
	return &CreateVNetNotFound{}
}

/*
CreateVNetNotFound describes a response with status code 404, with default header values.

Invalid zone ID was provided.
*/
type CreateVNetNotFound struct {
}

// IsSuccess returns true when this create v net not found response has a 2xx status code
func (o *CreateVNetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v net not found response has a 3xx status code
func (o *CreateVNetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v net not found response has a 4xx status code
func (o *CreateVNetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create v net not found response has a 5xx status code
func (o *CreateVNetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create v net not found response a status code equal to that given
func (o *CreateVNetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create v net not found response
func (o *CreateVNetNotFound) Code() int {
	return 404
}

func (o *CreateVNetNotFound) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetNotFound ", 404)
}

func (o *CreateVNetNotFound) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetNotFound ", 404)
}

func (o *CreateVNetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVNetConflict creates a CreateVNetConflict with default headers values
func NewCreateVNetConflict() *CreateVNetConflict {
	return &CreateVNetConflict{}
}

/*
CreateVNetConflict describes a response with status code 409, with default header values.

Virtual network already exists.
*/
type CreateVNetConflict struct {
}

// IsSuccess returns true when this create v net conflict response has a 2xx status code
func (o *CreateVNetConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v net conflict response has a 3xx status code
func (o *CreateVNetConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v net conflict response has a 4xx status code
func (o *CreateVNetConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create v net conflict response has a 5xx status code
func (o *CreateVNetConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create v net conflict response a status code equal to that given
func (o *CreateVNetConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create v net conflict response
func (o *CreateVNetConflict) Code() int {
	return 409
}

func (o *CreateVNetConflict) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetConflict ", 409)
}

func (o *CreateVNetConflict) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetConflict ", 409)
}

func (o *CreateVNetConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVNetInternalServerError creates a CreateVNetInternalServerError with default headers values
func NewCreateVNetInternalServerError() *CreateVNetInternalServerError {
	return &CreateVNetInternalServerError{}
}

/*
CreateVNetInternalServerError describes a response with status code 500, with default header values.

Unable to create virtual network.
*/
type CreateVNetInternalServerError struct {
}

// IsSuccess returns true when this create v net internal server error response has a 2xx status code
func (o *CreateVNetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v net internal server error response has a 3xx status code
func (o *CreateVNetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v net internal server error response has a 4xx status code
func (o *CreateVNetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create v net internal server error response has a 5xx status code
func (o *CreateVNetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create v net internal server error response a status code equal to that given
func (o *CreateVNetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create v net internal server error response
func (o *CreateVNetInternalServerError) Code() int {
	return 500
}

func (o *CreateVNetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetInternalServerError ", 500)
}

func (o *CreateVNetInternalServerError) String() string {
	return fmt.Sprintf("[POST /zone/{zoneId}/vnet][%d] createVNetInternalServerError ", 500)
}

func (o *CreateVNetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
