// Code generated by go-swagger; DO NOT EDIT.

package kgw

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// UpdateKGWReader is a Reader for the UpdateKGW structure.
type UpdateKGWReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateKGWReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateKGWOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateKGWBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateKGWNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateKGWInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 507:
		result := NewUpdateKGWInsufficientStorage()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /kgw/{kgwId}] UpdateKGW", response, response.Code())
	}
}

// NewUpdateKGWOK creates a UpdateKGWOK with default headers values
func NewUpdateKGWOK() *UpdateKGWOK {
	return &UpdateKGWOK{}
}

/*
UpdateKGWOK describes a response with status code 200, with default header values.

Returns the updated KGW.
*/
type UpdateKGWOK struct {
	Payload *models.KGW
}

// IsSuccess returns true when this update k g w o k response has a 2xx status code
func (o *UpdateKGWOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update k g w o k response has a 3xx status code
func (o *UpdateKGWOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k g w o k response has a 4xx status code
func (o *UpdateKGWOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k g w o k response has a 5xx status code
func (o *UpdateKGWOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update k g w o k response a status code equal to that given
func (o *UpdateKGWOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update k g w o k response
func (o *UpdateKGWOK) Code() int {
	return 200
}

func (o *UpdateKGWOK) Error() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWOK  %+v", 200, o.Payload)
}

func (o *UpdateKGWOK) String() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWOK  %+v", 200, o.Payload)
}

func (o *UpdateKGWOK) GetPayload() *models.KGW {
	return o.Payload
}

func (o *UpdateKGWOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KGW)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateKGWBadRequest creates a UpdateKGWBadRequest with default headers values
func NewUpdateKGWBadRequest() *UpdateKGWBadRequest {
	return &UpdateKGWBadRequest{}
}

/*
UpdateKGWBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type UpdateKGWBadRequest struct {
}

// IsSuccess returns true when this update k g w bad request response has a 2xx status code
func (o *UpdateKGWBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k g w bad request response has a 3xx status code
func (o *UpdateKGWBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k g w bad request response has a 4xx status code
func (o *UpdateKGWBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k g w bad request response has a 5xx status code
func (o *UpdateKGWBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update k g w bad request response a status code equal to that given
func (o *UpdateKGWBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update k g w bad request response
func (o *UpdateKGWBadRequest) Code() int {
	return 400
}

func (o *UpdateKGWBadRequest) Error() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWBadRequest ", 400)
}

func (o *UpdateKGWBadRequest) String() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWBadRequest ", 400)
}

func (o *UpdateKGWBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKGWNotFound creates a UpdateKGWNotFound with default headers values
func NewUpdateKGWNotFound() *UpdateKGWNotFound {
	return &UpdateKGWNotFound{}
}

/*
UpdateKGWNotFound describes a response with status code 404, with default header values.

Invalid KGW ID was provided.
*/
type UpdateKGWNotFound struct {
}

// IsSuccess returns true when this update k g w not found response has a 2xx status code
func (o *UpdateKGWNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k g w not found response has a 3xx status code
func (o *UpdateKGWNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k g w not found response has a 4xx status code
func (o *UpdateKGWNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k g w not found response has a 5xx status code
func (o *UpdateKGWNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update k g w not found response a status code equal to that given
func (o *UpdateKGWNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update k g w not found response
func (o *UpdateKGWNotFound) Code() int {
	return 404
}

func (o *UpdateKGWNotFound) Error() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWNotFound ", 404)
}

func (o *UpdateKGWNotFound) String() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWNotFound ", 404)
}

func (o *UpdateKGWNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKGWInternalServerError creates a UpdateKGWInternalServerError with default headers values
func NewUpdateKGWInternalServerError() *UpdateKGWInternalServerError {
	return &UpdateKGWInternalServerError{}
}

/*
UpdateKGWInternalServerError describes a response with status code 500, with default header values.

Unable to update the KCE virtual machine.
*/
type UpdateKGWInternalServerError struct {
}

// IsSuccess returns true when this update k g w internal server error response has a 2xx status code
func (o *UpdateKGWInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k g w internal server error response has a 3xx status code
func (o *UpdateKGWInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k g w internal server error response has a 4xx status code
func (o *UpdateKGWInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k g w internal server error response has a 5xx status code
func (o *UpdateKGWInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update k g w internal server error response a status code equal to that given
func (o *UpdateKGWInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update k g w internal server error response
func (o *UpdateKGWInternalServerError) Code() int {
	return 500
}

func (o *UpdateKGWInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWInternalServerError ", 500)
}

func (o *UpdateKGWInternalServerError) String() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWInternalServerError ", 500)
}

func (o *UpdateKGWInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKGWInsufficientStorage creates a UpdateKGWInsufficientStorage with default headers values
func NewUpdateKGWInsufficientStorage() *UpdateKGWInsufficientStorage {
	return &UpdateKGWInsufficientStorage{}
}

/*
UpdateKGWInsufficientStorage describes a response with status code 507, with default header values.

Available public IPs not available
*/
type UpdateKGWInsufficientStorage struct {
}

// IsSuccess returns true when this update k g w insufficient storage response has a 2xx status code
func (o *UpdateKGWInsufficientStorage) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k g w insufficient storage response has a 3xx status code
func (o *UpdateKGWInsufficientStorage) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k g w insufficient storage response has a 4xx status code
func (o *UpdateKGWInsufficientStorage) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k g w insufficient storage response has a 5xx status code
func (o *UpdateKGWInsufficientStorage) IsServerError() bool {
	return true
}

// IsCode returns true when this update k g w insufficient storage response a status code equal to that given
func (o *UpdateKGWInsufficientStorage) IsCode(code int) bool {
	return code == 507
}

// Code gets the status code for the update k g w insufficient storage response
func (o *UpdateKGWInsufficientStorage) Code() int {
	return 507
}

func (o *UpdateKGWInsufficientStorage) Error() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWInsufficientStorage ", 507)
}

func (o *UpdateKGWInsufficientStorage) String() string {
	return fmt.Sprintf("[PUT /kgw/{kgwId}][%d] updateKGWInsufficientStorage ", 507)
}

func (o *UpdateKGWInsufficientStorage) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
