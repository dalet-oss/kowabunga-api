// Code generated by go-swagger; DO NOT EDIT.

package pool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// GetPoolReader is a Reader for the GetPool structure.
type GetPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPoolOK creates a GetPoolOK with default headers values
func NewGetPoolOK() *GetPoolOK {
	return &GetPoolOK{}
}

/*
GetPoolOK describes a response with status code 200, with default header values.

Returns the pool object.
*/
type GetPoolOK struct {
	Payload *models.StoragePool
}

// IsSuccess returns true when this get pool o k response has a 2xx status code
func (o *GetPoolOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get pool o k response has a 3xx status code
func (o *GetPoolOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pool o k response has a 4xx status code
func (o *GetPoolOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pool o k response has a 5xx status code
func (o *GetPoolOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get pool o k response a status code equal to that given
func (o *GetPoolOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get pool o k response
func (o *GetPoolOK) Code() int {
	return 200
}

func (o *GetPoolOK) Error() string {
	return fmt.Sprintf("[GET /pool/{poolId}][%d] getPoolOK  %+v", 200, o.Payload)
}

func (o *GetPoolOK) String() string {
	return fmt.Sprintf("[GET /pool/{poolId}][%d] getPoolOK  %+v", 200, o.Payload)
}

func (o *GetPoolOK) GetPayload() *models.StoragePool {
	return o.Payload
}

func (o *GetPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoragePool)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoolNotFound creates a GetPoolNotFound with default headers values
func NewGetPoolNotFound() *GetPoolNotFound {
	return &GetPoolNotFound{}
}

/*
GetPoolNotFound describes a response with status code 404, with default header values.

Invalid pool ID was provided.
*/
type GetPoolNotFound struct {
}

// IsSuccess returns true when this get pool not found response has a 2xx status code
func (o *GetPoolNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pool not found response has a 3xx status code
func (o *GetPoolNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pool not found response has a 4xx status code
func (o *GetPoolNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pool not found response has a 5xx status code
func (o *GetPoolNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get pool not found response a status code equal to that given
func (o *GetPoolNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get pool not found response
func (o *GetPoolNotFound) Code() int {
	return 404
}

func (o *GetPoolNotFound) Error() string {
	return fmt.Sprintf("[GET /pool/{poolId}][%d] getPoolNotFound ", 404)
}

func (o *GetPoolNotFound) String() string {
	return fmt.Sprintf("[GET /pool/{poolId}][%d] getPoolNotFound ", 404)
}

func (o *GetPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
