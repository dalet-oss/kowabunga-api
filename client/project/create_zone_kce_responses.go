// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// CreateZoneKceReader is a Reader for the CreateZoneKce structure.
type CreateZoneKceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateZoneKceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateZoneKceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateZoneKceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateZoneKceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateZoneKceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateZoneKceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 507:
		result := NewCreateZoneKceInsufficientStorage()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateZoneKceCreated creates a CreateZoneKceCreated with default headers values
func NewCreateZoneKceCreated() *CreateZoneKceCreated {
	return &CreateZoneKceCreated{}
}

/*
CreateZoneKceCreated describes a response with status code 201, with default header values.

Returns the newly created KCE virtual machine object.
*/
type CreateZoneKceCreated struct {
	Payload *models.KCE
}

// IsSuccess returns true when this create zone kce created response has a 2xx status code
func (o *CreateZoneKceCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create zone kce created response has a 3xx status code
func (o *CreateZoneKceCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone kce created response has a 4xx status code
func (o *CreateZoneKceCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create zone kce created response has a 5xx status code
func (o *CreateZoneKceCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone kce created response a status code equal to that given
func (o *CreateZoneKceCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create zone kce created response
func (o *CreateZoneKceCreated) Code() int {
	return 201
}

func (o *CreateZoneKceCreated) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceCreated  %+v", 201, o.Payload)
}

func (o *CreateZoneKceCreated) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceCreated  %+v", 201, o.Payload)
}

func (o *CreateZoneKceCreated) GetPayload() *models.KCE {
	return o.Payload
}

func (o *CreateZoneKceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KCE)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateZoneKceBadRequest creates a CreateZoneKceBadRequest with default headers values
func NewCreateZoneKceBadRequest() *CreateZoneKceBadRequest {
	return &CreateZoneKceBadRequest{}
}

/*
CreateZoneKceBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateZoneKceBadRequest struct {
}

// IsSuccess returns true when this create zone kce bad request response has a 2xx status code
func (o *CreateZoneKceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone kce bad request response has a 3xx status code
func (o *CreateZoneKceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone kce bad request response has a 4xx status code
func (o *CreateZoneKceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create zone kce bad request response has a 5xx status code
func (o *CreateZoneKceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone kce bad request response a status code equal to that given
func (o *CreateZoneKceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create zone kce bad request response
func (o *CreateZoneKceBadRequest) Code() int {
	return 400
}

func (o *CreateZoneKceBadRequest) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceBadRequest ", 400)
}

func (o *CreateZoneKceBadRequest) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceBadRequest ", 400)
}

func (o *CreateZoneKceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateZoneKceNotFound creates a CreateZoneKceNotFound with default headers values
func NewCreateZoneKceNotFound() *CreateZoneKceNotFound {
	return &CreateZoneKceNotFound{}
}

/*
CreateZoneKceNotFound describes a response with status code 404, with default header values.

Invalid project or zone ID was provided.
*/
type CreateZoneKceNotFound struct {
}

// IsSuccess returns true when this create zone kce not found response has a 2xx status code
func (o *CreateZoneKceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone kce not found response has a 3xx status code
func (o *CreateZoneKceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone kce not found response has a 4xx status code
func (o *CreateZoneKceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create zone kce not found response has a 5xx status code
func (o *CreateZoneKceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone kce not found response a status code equal to that given
func (o *CreateZoneKceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create zone kce not found response
func (o *CreateZoneKceNotFound) Code() int {
	return 404
}

func (o *CreateZoneKceNotFound) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceNotFound ", 404)
}

func (o *CreateZoneKceNotFound) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceNotFound ", 404)
}

func (o *CreateZoneKceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateZoneKceConflict creates a CreateZoneKceConflict with default headers values
func NewCreateZoneKceConflict() *CreateZoneKceConflict {
	return &CreateZoneKceConflict{}
}

/*
CreateZoneKceConflict describes a response with status code 409, with default header values.

KCE Virtual machine already exists.
*/
type CreateZoneKceConflict struct {
}

// IsSuccess returns true when this create zone kce conflict response has a 2xx status code
func (o *CreateZoneKceConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone kce conflict response has a 3xx status code
func (o *CreateZoneKceConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone kce conflict response has a 4xx status code
func (o *CreateZoneKceConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create zone kce conflict response has a 5xx status code
func (o *CreateZoneKceConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone kce conflict response a status code equal to that given
func (o *CreateZoneKceConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create zone kce conflict response
func (o *CreateZoneKceConflict) Code() int {
	return 409
}

func (o *CreateZoneKceConflict) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceConflict ", 409)
}

func (o *CreateZoneKceConflict) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceConflict ", 409)
}

func (o *CreateZoneKceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateZoneKceInternalServerError creates a CreateZoneKceInternalServerError with default headers values
func NewCreateZoneKceInternalServerError() *CreateZoneKceInternalServerError {
	return &CreateZoneKceInternalServerError{}
}

/*
CreateZoneKceInternalServerError describes a response with status code 500, with default header values.

Unable to create the KCE virtual machine.
*/
type CreateZoneKceInternalServerError struct {
}

// IsSuccess returns true when this create zone kce internal server error response has a 2xx status code
func (o *CreateZoneKceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone kce internal server error response has a 3xx status code
func (o *CreateZoneKceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone kce internal server error response has a 4xx status code
func (o *CreateZoneKceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create zone kce internal server error response has a 5xx status code
func (o *CreateZoneKceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create zone kce internal server error response a status code equal to that given
func (o *CreateZoneKceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create zone kce internal server error response
func (o *CreateZoneKceInternalServerError) Code() int {
	return 500
}

func (o *CreateZoneKceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceInternalServerError ", 500)
}

func (o *CreateZoneKceInternalServerError) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceInternalServerError ", 500)
}

func (o *CreateZoneKceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateZoneKceInsufficientStorage creates a CreateZoneKceInsufficientStorage with default headers values
func NewCreateZoneKceInsufficientStorage() *CreateZoneKceInsufficientStorage {
	return &CreateZoneKceInsufficientStorage{}
}

/*
CreateZoneKceInsufficientStorage describes a response with status code 507, with default header values.

Requested characteristics are beyond project's quota in place.
*/
type CreateZoneKceInsufficientStorage struct {
}

// IsSuccess returns true when this create zone kce insufficient storage response has a 2xx status code
func (o *CreateZoneKceInsufficientStorage) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone kce insufficient storage response has a 3xx status code
func (o *CreateZoneKceInsufficientStorage) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone kce insufficient storage response has a 4xx status code
func (o *CreateZoneKceInsufficientStorage) IsClientError() bool {
	return false
}

// IsServerError returns true when this create zone kce insufficient storage response has a 5xx status code
func (o *CreateZoneKceInsufficientStorage) IsServerError() bool {
	return true
}

// IsCode returns true when this create zone kce insufficient storage response a status code equal to that given
func (o *CreateZoneKceInsufficientStorage) IsCode(code int) bool {
	return code == 507
}

// Code gets the status code for the create zone kce insufficient storage response
func (o *CreateZoneKceInsufficientStorage) Code() int {
	return 507
}

func (o *CreateZoneKceInsufficientStorage) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceInsufficientStorage ", 507)
}

func (o *CreateZoneKceInsufficientStorage) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/zone/{zoneId}/kce][%d] createZoneKceInsufficientStorage ", 507)
}

func (o *CreateZoneKceInsufficientStorage) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
