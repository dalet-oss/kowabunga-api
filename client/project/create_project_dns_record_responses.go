// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// CreateProjectDNSRecordReader is a Reader for the CreateProjectDNSRecord structure.
type CreateProjectDNSRecordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectDNSRecordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProjectDNSRecordCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectDNSRecordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateProjectDNSRecordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateProjectDNSRecordConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateProjectDNSRecordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /project/{projectId}/record] CreateProjectDnsRecord", response, response.Code())
	}
}

// NewCreateProjectDNSRecordCreated creates a CreateProjectDNSRecordCreated with default headers values
func NewCreateProjectDNSRecordCreated() *CreateProjectDNSRecordCreated {
	return &CreateProjectDNSRecordCreated{}
}

/*
CreateProjectDNSRecordCreated describes a response with status code 201, with default header values.

Returns the newly created DNS record object.
*/
type CreateProjectDNSRecordCreated struct {
	Payload *models.DNSRecord
}

// IsSuccess returns true when this create project Dns record created response has a 2xx status code
func (o *CreateProjectDNSRecordCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project Dns record created response has a 3xx status code
func (o *CreateProjectDNSRecordCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project Dns record created response has a 4xx status code
func (o *CreateProjectDNSRecordCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project Dns record created response has a 5xx status code
func (o *CreateProjectDNSRecordCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create project Dns record created response a status code equal to that given
func (o *CreateProjectDNSRecordCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create project Dns record created response
func (o *CreateProjectDNSRecordCreated) Code() int {
	return 201
}

func (o *CreateProjectDNSRecordCreated) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordCreated  %+v", 201, o.Payload)
}

func (o *CreateProjectDNSRecordCreated) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordCreated  %+v", 201, o.Payload)
}

func (o *CreateProjectDNSRecordCreated) GetPayload() *models.DNSRecord {
	return o.Payload
}

func (o *CreateProjectDNSRecordCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DNSRecord)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectDNSRecordBadRequest creates a CreateProjectDNSRecordBadRequest with default headers values
func NewCreateProjectDNSRecordBadRequest() *CreateProjectDNSRecordBadRequest {
	return &CreateProjectDNSRecordBadRequest{}
}

/*
CreateProjectDNSRecordBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateProjectDNSRecordBadRequest struct {
}

// IsSuccess returns true when this create project Dns record bad request response has a 2xx status code
func (o *CreateProjectDNSRecordBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project Dns record bad request response has a 3xx status code
func (o *CreateProjectDNSRecordBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project Dns record bad request response has a 4xx status code
func (o *CreateProjectDNSRecordBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project Dns record bad request response has a 5xx status code
func (o *CreateProjectDNSRecordBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create project Dns record bad request response a status code equal to that given
func (o *CreateProjectDNSRecordBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create project Dns record bad request response
func (o *CreateProjectDNSRecordBadRequest) Code() int {
	return 400
}

func (o *CreateProjectDNSRecordBadRequest) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordBadRequest ", 400)
}

func (o *CreateProjectDNSRecordBadRequest) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordBadRequest ", 400)
}

func (o *CreateProjectDNSRecordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectDNSRecordNotFound creates a CreateProjectDNSRecordNotFound with default headers values
func NewCreateProjectDNSRecordNotFound() *CreateProjectDNSRecordNotFound {
	return &CreateProjectDNSRecordNotFound{}
}

/*
CreateProjectDNSRecordNotFound describes a response with status code 404, with default header values.

Invalid project ID was provided.
*/
type CreateProjectDNSRecordNotFound struct {
}

// IsSuccess returns true when this create project Dns record not found response has a 2xx status code
func (o *CreateProjectDNSRecordNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project Dns record not found response has a 3xx status code
func (o *CreateProjectDNSRecordNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project Dns record not found response has a 4xx status code
func (o *CreateProjectDNSRecordNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project Dns record not found response has a 5xx status code
func (o *CreateProjectDNSRecordNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create project Dns record not found response a status code equal to that given
func (o *CreateProjectDNSRecordNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create project Dns record not found response
func (o *CreateProjectDNSRecordNotFound) Code() int {
	return 404
}

func (o *CreateProjectDNSRecordNotFound) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordNotFound ", 404)
}

func (o *CreateProjectDNSRecordNotFound) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordNotFound ", 404)
}

func (o *CreateProjectDNSRecordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectDNSRecordConflict creates a CreateProjectDNSRecordConflict with default headers values
func NewCreateProjectDNSRecordConflict() *CreateProjectDNSRecordConflict {
	return &CreateProjectDNSRecordConflict{}
}

/*
CreateProjectDNSRecordConflict describes a response with status code 409, with default header values.

DNS record already exists.
*/
type CreateProjectDNSRecordConflict struct {
}

// IsSuccess returns true when this create project Dns record conflict response has a 2xx status code
func (o *CreateProjectDNSRecordConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project Dns record conflict response has a 3xx status code
func (o *CreateProjectDNSRecordConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project Dns record conflict response has a 4xx status code
func (o *CreateProjectDNSRecordConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project Dns record conflict response has a 5xx status code
func (o *CreateProjectDNSRecordConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create project Dns record conflict response a status code equal to that given
func (o *CreateProjectDNSRecordConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create project Dns record conflict response
func (o *CreateProjectDNSRecordConflict) Code() int {
	return 409
}

func (o *CreateProjectDNSRecordConflict) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordConflict ", 409)
}

func (o *CreateProjectDNSRecordConflict) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordConflict ", 409)
}

func (o *CreateProjectDNSRecordConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectDNSRecordInternalServerError creates a CreateProjectDNSRecordInternalServerError with default headers values
func NewCreateProjectDNSRecordInternalServerError() *CreateProjectDNSRecordInternalServerError {
	return &CreateProjectDNSRecordInternalServerError{}
}

/*
CreateProjectDNSRecordInternalServerError describes a response with status code 500, with default header values.

Unable to create the DNS record.
*/
type CreateProjectDNSRecordInternalServerError struct {
}

// IsSuccess returns true when this create project Dns record internal server error response has a 2xx status code
func (o *CreateProjectDNSRecordInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project Dns record internal server error response has a 3xx status code
func (o *CreateProjectDNSRecordInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project Dns record internal server error response has a 4xx status code
func (o *CreateProjectDNSRecordInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project Dns record internal server error response has a 5xx status code
func (o *CreateProjectDNSRecordInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create project Dns record internal server error response a status code equal to that given
func (o *CreateProjectDNSRecordInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create project Dns record internal server error response
func (o *CreateProjectDNSRecordInternalServerError) Code() int {
	return 500
}

func (o *CreateProjectDNSRecordInternalServerError) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordInternalServerError ", 500)
}

func (o *CreateProjectDNSRecordInternalServerError) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/record][%d] createProjectDnsRecordInternalServerError ", 500)
}

func (o *CreateProjectDNSRecordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
