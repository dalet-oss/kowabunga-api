// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ResetProjectQuotasReader is a Reader for the ResetProjectQuotas structure.
type ResetProjectQuotasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetProjectQuotasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResetProjectQuotasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewResetProjectQuotasNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewResetProjectQuotasOK creates a ResetProjectQuotasOK with default headers values
func NewResetProjectQuotasOK() *ResetProjectQuotasOK {
	return &ResetProjectQuotasOK{}
}

/*
ResetProjectQuotasOK describes a response with status code 200, with default header values.

The project quotas have been successfully reset.
*/
type ResetProjectQuotasOK struct {
}

// IsSuccess returns true when this reset project quotas o k response has a 2xx status code
func (o *ResetProjectQuotasOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reset project quotas o k response has a 3xx status code
func (o *ResetProjectQuotasOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset project quotas o k response has a 4xx status code
func (o *ResetProjectQuotasOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset project quotas o k response has a 5xx status code
func (o *ResetProjectQuotasOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reset project quotas o k response a status code equal to that given
func (o *ResetProjectQuotasOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reset project quotas o k response
func (o *ResetProjectQuotasOK) Code() int {
	return 200
}

func (o *ResetProjectQuotasOK) Error() string {
	return fmt.Sprintf("[DELETE /project/{projectId}/quotas][%d] resetProjectQuotasOK ", 200)
}

func (o *ResetProjectQuotasOK) String() string {
	return fmt.Sprintf("[DELETE /project/{projectId}/quotas][%d] resetProjectQuotasOK ", 200)
}

func (o *ResetProjectQuotasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetProjectQuotasNotFound creates a ResetProjectQuotasNotFound with default headers values
func NewResetProjectQuotasNotFound() *ResetProjectQuotasNotFound {
	return &ResetProjectQuotasNotFound{}
}

/*
ResetProjectQuotasNotFound describes a response with status code 404, with default header values.

Invalid project ID was provided.
*/
type ResetProjectQuotasNotFound struct {
}

// IsSuccess returns true when this reset project quotas not found response has a 2xx status code
func (o *ResetProjectQuotasNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset project quotas not found response has a 3xx status code
func (o *ResetProjectQuotasNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset project quotas not found response has a 4xx status code
func (o *ResetProjectQuotasNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset project quotas not found response has a 5xx status code
func (o *ResetProjectQuotasNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reset project quotas not found response a status code equal to that given
func (o *ResetProjectQuotasNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reset project quotas not found response
func (o *ResetProjectQuotasNotFound) Code() int {
	return 404
}

func (o *ResetProjectQuotasNotFound) Error() string {
	return fmt.Sprintf("[DELETE /project/{projectId}/quotas][%d] resetProjectQuotasNotFound ", 404)
}

func (o *ResetProjectQuotasNotFound) String() string {
	return fmt.Sprintf("[DELETE /project/{projectId}/quotas][%d] resetProjectQuotasNotFound ", 404)
}

func (o *ResetProjectQuotasNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
