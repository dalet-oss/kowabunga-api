// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// NewCreateZoneVolumeParams creates a new CreateZoneVolumeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateZoneVolumeParams() *CreateZoneVolumeParams {
	return &CreateZoneVolumeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateZoneVolumeParamsWithTimeout creates a new CreateZoneVolumeParams object
// with the ability to set a timeout on a request.
func NewCreateZoneVolumeParamsWithTimeout(timeout time.Duration) *CreateZoneVolumeParams {
	return &CreateZoneVolumeParams{
		timeout: timeout,
	}
}

// NewCreateZoneVolumeParamsWithContext creates a new CreateZoneVolumeParams object
// with the ability to set a context for a request.
func NewCreateZoneVolumeParamsWithContext(ctx context.Context) *CreateZoneVolumeParams {
	return &CreateZoneVolumeParams{
		Context: ctx,
	}
}

// NewCreateZoneVolumeParamsWithHTTPClient creates a new CreateZoneVolumeParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateZoneVolumeParamsWithHTTPClient(client *http.Client) *CreateZoneVolumeParams {
	return &CreateZoneVolumeParams{
		HTTPClient: client,
	}
}

/*
CreateZoneVolumeParams contains all the parameters to send to the API endpoint

	for the create zone volume operation.

	Typically these are written to a http.Request.
*/
type CreateZoneVolumeParams struct {

	// Body.
	Body *models.Volume

	/* HostID.

	   the ID of the associated host (useless for RBD pools, mandatory for local ones).
	*/
	HostID *string

	/* PoolID.

	   the ID of the associated storage pool (optional, zone's default if unspecified).
	*/
	PoolID *string

	/* ProjectID.

	   the ID of the associated project.
	*/
	ProjectID string

	/* TemplateID.

	   the ID of the template to clone the storage volume from (optional, zone's default if unspecified)
	*/
	TemplateID *string

	/* ZoneID.

	   the ID of the associated zone.
	*/
	ZoneID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create zone volume params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateZoneVolumeParams) WithDefaults() *CreateZoneVolumeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create zone volume params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateZoneVolumeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create zone volume params
func (o *CreateZoneVolumeParams) WithTimeout(timeout time.Duration) *CreateZoneVolumeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create zone volume params
func (o *CreateZoneVolumeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create zone volume params
func (o *CreateZoneVolumeParams) WithContext(ctx context.Context) *CreateZoneVolumeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create zone volume params
func (o *CreateZoneVolumeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create zone volume params
func (o *CreateZoneVolumeParams) WithHTTPClient(client *http.Client) *CreateZoneVolumeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create zone volume params
func (o *CreateZoneVolumeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create zone volume params
func (o *CreateZoneVolumeParams) WithBody(body *models.Volume) *CreateZoneVolumeParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create zone volume params
func (o *CreateZoneVolumeParams) SetBody(body *models.Volume) {
	o.Body = body
}

// WithHostID adds the hostID to the create zone volume params
func (o *CreateZoneVolumeParams) WithHostID(hostID *string) *CreateZoneVolumeParams {
	o.SetHostID(hostID)
	return o
}

// SetHostID adds the hostId to the create zone volume params
func (o *CreateZoneVolumeParams) SetHostID(hostID *string) {
	o.HostID = hostID
}

// WithPoolID adds the poolID to the create zone volume params
func (o *CreateZoneVolumeParams) WithPoolID(poolID *string) *CreateZoneVolumeParams {
	o.SetPoolID(poolID)
	return o
}

// SetPoolID adds the poolId to the create zone volume params
func (o *CreateZoneVolumeParams) SetPoolID(poolID *string) {
	o.PoolID = poolID
}

// WithProjectID adds the projectID to the create zone volume params
func (o *CreateZoneVolumeParams) WithProjectID(projectID string) *CreateZoneVolumeParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the create zone volume params
func (o *CreateZoneVolumeParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WithTemplateID adds the templateID to the create zone volume params
func (o *CreateZoneVolumeParams) WithTemplateID(templateID *string) *CreateZoneVolumeParams {
	o.SetTemplateID(templateID)
	return o
}

// SetTemplateID adds the templateId to the create zone volume params
func (o *CreateZoneVolumeParams) SetTemplateID(templateID *string) {
	o.TemplateID = templateID
}

// WithZoneID adds the zoneID to the create zone volume params
func (o *CreateZoneVolumeParams) WithZoneID(zoneID string) *CreateZoneVolumeParams {
	o.SetZoneID(zoneID)
	return o
}

// SetZoneID adds the zoneId to the create zone volume params
func (o *CreateZoneVolumeParams) SetZoneID(zoneID string) {
	o.ZoneID = zoneID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateZoneVolumeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.HostID != nil {

		// query param hostId
		var qrHostID string

		if o.HostID != nil {
			qrHostID = *o.HostID
		}
		qHostID := qrHostID
		if qHostID != "" {

			if err := r.SetQueryParam("hostId", qHostID); err != nil {
				return err
			}
		}
	}

	if o.PoolID != nil {

		// query param poolId
		var qrPoolID string

		if o.PoolID != nil {
			qrPoolID = *o.PoolID
		}
		qPoolID := qrPoolID
		if qPoolID != "" {

			if err := r.SetQueryParam("poolId", qPoolID); err != nil {
				return err
			}
		}
	}

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID); err != nil {
		return err
	}

	if o.TemplateID != nil {

		// query param templateId
		var qrTemplateID string

		if o.TemplateID != nil {
			qrTemplateID = *o.TemplateID
		}
		qTemplateID := qrTemplateID
		if qTemplateID != "" {

			if err := r.SetQueryParam("templateId", qTemplateID); err != nil {
				return err
			}
		}
	}

	// path param zoneId
	if err := r.SetPathParam("zoneId", o.ZoneID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
