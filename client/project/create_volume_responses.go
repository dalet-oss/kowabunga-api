// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// CreateVolumeReader is a Reader for the CreateVolume structure.
type CreateVolumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVolumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateVolumeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateVolumeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateVolumeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateVolumeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateVolumeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 507:
		result := NewCreateVolumeInsufficientStorage()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateVolumeCreated creates a CreateVolumeCreated with default headers values
func NewCreateVolumeCreated() *CreateVolumeCreated {
	return &CreateVolumeCreated{}
}

/*
CreateVolumeCreated describes a response with status code 201, with default header values.

Returns the newly created storage volume object.
*/
type CreateVolumeCreated struct {
	Payload *models.Volume
}

// IsSuccess returns true when this create volume created response has a 2xx status code
func (o *CreateVolumeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create volume created response has a 3xx status code
func (o *CreateVolumeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create volume created response has a 4xx status code
func (o *CreateVolumeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create volume created response has a 5xx status code
func (o *CreateVolumeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create volume created response a status code equal to that given
func (o *CreateVolumeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create volume created response
func (o *CreateVolumeCreated) Code() int {
	return 201
}

func (o *CreateVolumeCreated) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeCreated  %+v", 201, o.Payload)
}

func (o *CreateVolumeCreated) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeCreated  %+v", 201, o.Payload)
}

func (o *CreateVolumeCreated) GetPayload() *models.Volume {
	return o.Payload
}

func (o *CreateVolumeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Volume)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeBadRequest creates a CreateVolumeBadRequest with default headers values
func NewCreateVolumeBadRequest() *CreateVolumeBadRequest {
	return &CreateVolumeBadRequest{}
}

/*
CreateVolumeBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateVolumeBadRequest struct {
}

// IsSuccess returns true when this create volume bad request response has a 2xx status code
func (o *CreateVolumeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create volume bad request response has a 3xx status code
func (o *CreateVolumeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create volume bad request response has a 4xx status code
func (o *CreateVolumeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create volume bad request response has a 5xx status code
func (o *CreateVolumeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create volume bad request response a status code equal to that given
func (o *CreateVolumeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create volume bad request response
func (o *CreateVolumeBadRequest) Code() int {
	return 400
}

func (o *CreateVolumeBadRequest) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeBadRequest ", 400)
}

func (o *CreateVolumeBadRequest) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeBadRequest ", 400)
}

func (o *CreateVolumeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVolumeNotFound creates a CreateVolumeNotFound with default headers values
func NewCreateVolumeNotFound() *CreateVolumeNotFound {
	return &CreateVolumeNotFound{}
}

/*
CreateVolumeNotFound describes a response with status code 404, with default header values.

Invalid project ID was provided.
*/
type CreateVolumeNotFound struct {
}

// IsSuccess returns true when this create volume not found response has a 2xx status code
func (o *CreateVolumeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create volume not found response has a 3xx status code
func (o *CreateVolumeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create volume not found response has a 4xx status code
func (o *CreateVolumeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create volume not found response has a 5xx status code
func (o *CreateVolumeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create volume not found response a status code equal to that given
func (o *CreateVolumeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create volume not found response
func (o *CreateVolumeNotFound) Code() int {
	return 404
}

func (o *CreateVolumeNotFound) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeNotFound ", 404)
}

func (o *CreateVolumeNotFound) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeNotFound ", 404)
}

func (o *CreateVolumeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVolumeConflict creates a CreateVolumeConflict with default headers values
func NewCreateVolumeConflict() *CreateVolumeConflict {
	return &CreateVolumeConflict{}
}

/*
CreateVolumeConflict describes a response with status code 409, with default header values.

Storage volume already exists.
*/
type CreateVolumeConflict struct {
}

// IsSuccess returns true when this create volume conflict response has a 2xx status code
func (o *CreateVolumeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create volume conflict response has a 3xx status code
func (o *CreateVolumeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create volume conflict response has a 4xx status code
func (o *CreateVolumeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create volume conflict response has a 5xx status code
func (o *CreateVolumeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create volume conflict response a status code equal to that given
func (o *CreateVolumeConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create volume conflict response
func (o *CreateVolumeConflict) Code() int {
	return 409
}

func (o *CreateVolumeConflict) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeConflict ", 409)
}

func (o *CreateVolumeConflict) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeConflict ", 409)
}

func (o *CreateVolumeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVolumeInternalServerError creates a CreateVolumeInternalServerError with default headers values
func NewCreateVolumeInternalServerError() *CreateVolumeInternalServerError {
	return &CreateVolumeInternalServerError{}
}

/*
CreateVolumeInternalServerError describes a response with status code 500, with default header values.

Unable to create the storage volume.
*/
type CreateVolumeInternalServerError struct {
}

// IsSuccess returns true when this create volume internal server error response has a 2xx status code
func (o *CreateVolumeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create volume internal server error response has a 3xx status code
func (o *CreateVolumeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create volume internal server error response has a 4xx status code
func (o *CreateVolumeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create volume internal server error response has a 5xx status code
func (o *CreateVolumeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create volume internal server error response a status code equal to that given
func (o *CreateVolumeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create volume internal server error response
func (o *CreateVolumeInternalServerError) Code() int {
	return 500
}

func (o *CreateVolumeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeInternalServerError ", 500)
}

func (o *CreateVolumeInternalServerError) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeInternalServerError ", 500)
}

func (o *CreateVolumeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVolumeInsufficientStorage creates a CreateVolumeInsufficientStorage with default headers values
func NewCreateVolumeInsufficientStorage() *CreateVolumeInsufficientStorage {
	return &CreateVolumeInsufficientStorage{}
}

/*
CreateVolumeInsufficientStorage describes a response with status code 507, with default header values.

Requested volume characteristics are beyond project's quota in place.
*/
type CreateVolumeInsufficientStorage struct {
}

// IsSuccess returns true when this create volume insufficient storage response has a 2xx status code
func (o *CreateVolumeInsufficientStorage) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create volume insufficient storage response has a 3xx status code
func (o *CreateVolumeInsufficientStorage) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create volume insufficient storage response has a 4xx status code
func (o *CreateVolumeInsufficientStorage) IsClientError() bool {
	return false
}

// IsServerError returns true when this create volume insufficient storage response has a 5xx status code
func (o *CreateVolumeInsufficientStorage) IsServerError() bool {
	return true
}

// IsCode returns true when this create volume insufficient storage response a status code equal to that given
func (o *CreateVolumeInsufficientStorage) IsCode(code int) bool {
	return code == 507
}

// Code gets the status code for the create volume insufficient storage response
func (o *CreateVolumeInsufficientStorage) Code() int {
	return 507
}

func (o *CreateVolumeInsufficientStorage) Error() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeInsufficientStorage ", 507)
}

func (o *CreateVolumeInsufficientStorage) String() string {
	return fmt.Sprintf("[POST /project/{projectId}/volume][%d] createVolumeInsufficientStorage ", 507)
}

func (o *CreateVolumeInsufficientStorage) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
