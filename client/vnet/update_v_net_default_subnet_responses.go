// Code generated by go-swagger; DO NOT EDIT.

package vnet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateVNetDefaultSubnetReader is a Reader for the UpdateVNetDefaultSubnet structure.
type UpdateVNetDefaultSubnetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateVNetDefaultSubnetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateVNetDefaultSubnetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateVNetDefaultSubnetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateVNetDefaultSubnetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateVNetDefaultSubnetOK creates a UpdateVNetDefaultSubnetOK with default headers values
func NewUpdateVNetDefaultSubnetOK() *UpdateVNetDefaultSubnetOK {
	return &UpdateVNetDefaultSubnetOK{}
}

/*
UpdateVNetDefaultSubnetOK describes a response with status code 200, with default header values.

Returns the updated subnet object.
*/
type UpdateVNetDefaultSubnetOK struct {
}

// IsSuccess returns true when this update v net default subnet o k response has a 2xx status code
func (o *UpdateVNetDefaultSubnetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update v net default subnet o k response has a 3xx status code
func (o *UpdateVNetDefaultSubnetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update v net default subnet o k response has a 4xx status code
func (o *UpdateVNetDefaultSubnetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update v net default subnet o k response has a 5xx status code
func (o *UpdateVNetDefaultSubnetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update v net default subnet o k response a status code equal to that given
func (o *UpdateVNetDefaultSubnetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update v net default subnet o k response
func (o *UpdateVNetDefaultSubnetOK) Code() int {
	return 200
}

func (o *UpdateVNetDefaultSubnetOK) Error() string {
	return fmt.Sprintf("[PUT /vnet/{vnetId}/subnet/{subnetId}/default][%d] updateVNetDefaultSubnetOK ", 200)
}

func (o *UpdateVNetDefaultSubnetOK) String() string {
	return fmt.Sprintf("[PUT /vnet/{vnetId}/subnet/{subnetId}/default][%d] updateVNetDefaultSubnetOK ", 200)
}

func (o *UpdateVNetDefaultSubnetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateVNetDefaultSubnetNotFound creates a UpdateVNetDefaultSubnetNotFound with default headers values
func NewUpdateVNetDefaultSubnetNotFound() *UpdateVNetDefaultSubnetNotFound {
	return &UpdateVNetDefaultSubnetNotFound{}
}

/*
UpdateVNetDefaultSubnetNotFound describes a response with status code 404, with default header values.

Invalid virtual network ID or subnet ID was provided.
*/
type UpdateVNetDefaultSubnetNotFound struct {
}

// IsSuccess returns true when this update v net default subnet not found response has a 2xx status code
func (o *UpdateVNetDefaultSubnetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update v net default subnet not found response has a 3xx status code
func (o *UpdateVNetDefaultSubnetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update v net default subnet not found response has a 4xx status code
func (o *UpdateVNetDefaultSubnetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update v net default subnet not found response has a 5xx status code
func (o *UpdateVNetDefaultSubnetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update v net default subnet not found response a status code equal to that given
func (o *UpdateVNetDefaultSubnetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update v net default subnet not found response
func (o *UpdateVNetDefaultSubnetNotFound) Code() int {
	return 404
}

func (o *UpdateVNetDefaultSubnetNotFound) Error() string {
	return fmt.Sprintf("[PUT /vnet/{vnetId}/subnet/{subnetId}/default][%d] updateVNetDefaultSubnetNotFound ", 404)
}

func (o *UpdateVNetDefaultSubnetNotFound) String() string {
	return fmt.Sprintf("[PUT /vnet/{vnetId}/subnet/{subnetId}/default][%d] updateVNetDefaultSubnetNotFound ", 404)
}

func (o *UpdateVNetDefaultSubnetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateVNetDefaultSubnetInternalServerError creates a UpdateVNetDefaultSubnetInternalServerError with default headers values
func NewUpdateVNetDefaultSubnetInternalServerError() *UpdateVNetDefaultSubnetInternalServerError {
	return &UpdateVNetDefaultSubnetInternalServerError{}
}

/*
UpdateVNetDefaultSubnetInternalServerError describes a response with status code 500, with default header values.

Unable to assign the requested subnet as virtual network default.
*/
type UpdateVNetDefaultSubnetInternalServerError struct {
}

// IsSuccess returns true when this update v net default subnet internal server error response has a 2xx status code
func (o *UpdateVNetDefaultSubnetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update v net default subnet internal server error response has a 3xx status code
func (o *UpdateVNetDefaultSubnetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update v net default subnet internal server error response has a 4xx status code
func (o *UpdateVNetDefaultSubnetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update v net default subnet internal server error response has a 5xx status code
func (o *UpdateVNetDefaultSubnetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update v net default subnet internal server error response a status code equal to that given
func (o *UpdateVNetDefaultSubnetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update v net default subnet internal server error response
func (o *UpdateVNetDefaultSubnetInternalServerError) Code() int {
	return 500
}

func (o *UpdateVNetDefaultSubnetInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /vnet/{vnetId}/subnet/{subnetId}/default][%d] updateVNetDefaultSubnetInternalServerError ", 500)
}

func (o *UpdateVNetDefaultSubnetInternalServerError) String() string {
	return fmt.Sprintf("[PUT /vnet/{vnetId}/subnet/{subnetId}/default][%d] updateVNetDefaultSubnetInternalServerError ", 500)
}

func (o *UpdateVNetDefaultSubnetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
