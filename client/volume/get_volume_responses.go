// Code generated by go-swagger; DO NOT EDIT.

package volume

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// GetVolumeReader is a Reader for the GetVolume structure.
type GetVolumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVolumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVolumeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetVolumeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /volume/{volumeId}] GetVolume", response, response.Code())
	}
}

// NewGetVolumeOK creates a GetVolumeOK with default headers values
func NewGetVolumeOK() *GetVolumeOK {
	return &GetVolumeOK{}
}

/*
GetVolumeOK describes a response with status code 200, with default header values.

Returns the storage volume object.
*/
type GetVolumeOK struct {
	Payload *models.Volume
}

// IsSuccess returns true when this get volume o k response has a 2xx status code
func (o *GetVolumeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get volume o k response has a 3xx status code
func (o *GetVolumeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get volume o k response has a 4xx status code
func (o *GetVolumeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get volume o k response has a 5xx status code
func (o *GetVolumeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get volume o k response a status code equal to that given
func (o *GetVolumeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get volume o k response
func (o *GetVolumeOK) Code() int {
	return 200
}

func (o *GetVolumeOK) Error() string {
	return fmt.Sprintf("[GET /volume/{volumeId}][%d] getVolumeOK  %+v", 200, o.Payload)
}

func (o *GetVolumeOK) String() string {
	return fmt.Sprintf("[GET /volume/{volumeId}][%d] getVolumeOK  %+v", 200, o.Payload)
}

func (o *GetVolumeOK) GetPayload() *models.Volume {
	return o.Payload
}

func (o *GetVolumeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Volume)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeNotFound creates a GetVolumeNotFound with default headers values
func NewGetVolumeNotFound() *GetVolumeNotFound {
	return &GetVolumeNotFound{}
}

/*
GetVolumeNotFound describes a response with status code 404, with default header values.

Invalid storage volume ID was provided.
*/
type GetVolumeNotFound struct {
}

// IsSuccess returns true when this get volume not found response has a 2xx status code
func (o *GetVolumeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get volume not found response has a 3xx status code
func (o *GetVolumeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get volume not found response has a 4xx status code
func (o *GetVolumeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get volume not found response has a 5xx status code
func (o *GetVolumeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get volume not found response a status code equal to that given
func (o *GetVolumeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get volume not found response
func (o *GetVolumeNotFound) Code() int {
	return 404
}

func (o *GetVolumeNotFound) Error() string {
	return fmt.Sprintf("[GET /volume/{volumeId}][%d] getVolumeNotFound ", 404)
}

func (o *GetVolumeNotFound) String() string {
	return fmt.Sprintf("[GET /volume/{volumeId}][%d] getVolumeNotFound ", 404)
}

func (o *GetVolumeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
