// Code generated by go-swagger; DO NOT EDIT.

package adapter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/kowabunga-api/models"
)

// UpdateAdapterReader is a Reader for the UpdateAdapter structure.
type UpdateAdapterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAdapterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAdapterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAdapterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAdapterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /adapter/{adapterId}] UpdateAdapter", response, response.Code())
	}
}

// NewUpdateAdapterOK creates a UpdateAdapterOK with default headers values
func NewUpdateAdapterOK() *UpdateAdapterOK {
	return &UpdateAdapterOK{}
}

/*
UpdateAdapterOK describes a response with status code 200, with default header values.

Returns the updated network adapter object.
*/
type UpdateAdapterOK struct {
	Payload *models.Adapter
}

// IsSuccess returns true when this update adapter o k response has a 2xx status code
func (o *UpdateAdapterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update adapter o k response has a 3xx status code
func (o *UpdateAdapterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update adapter o k response has a 4xx status code
func (o *UpdateAdapterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update adapter o k response has a 5xx status code
func (o *UpdateAdapterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update adapter o k response a status code equal to that given
func (o *UpdateAdapterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update adapter o k response
func (o *UpdateAdapterOK) Code() int {
	return 200
}

func (o *UpdateAdapterOK) Error() string {
	return fmt.Sprintf("[PUT /adapter/{adapterId}][%d] updateAdapterOK  %+v", 200, o.Payload)
}

func (o *UpdateAdapterOK) String() string {
	return fmt.Sprintf("[PUT /adapter/{adapterId}][%d] updateAdapterOK  %+v", 200, o.Payload)
}

func (o *UpdateAdapterOK) GetPayload() *models.Adapter {
	return o.Payload
}

func (o *UpdateAdapterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Adapter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAdapterBadRequest creates a UpdateAdapterBadRequest with default headers values
func NewUpdateAdapterBadRequest() *UpdateAdapterBadRequest {
	return &UpdateAdapterBadRequest{}
}

/*
UpdateAdapterBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type UpdateAdapterBadRequest struct {
}

// IsSuccess returns true when this update adapter bad request response has a 2xx status code
func (o *UpdateAdapterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update adapter bad request response has a 3xx status code
func (o *UpdateAdapterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update adapter bad request response has a 4xx status code
func (o *UpdateAdapterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update adapter bad request response has a 5xx status code
func (o *UpdateAdapterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update adapter bad request response a status code equal to that given
func (o *UpdateAdapterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update adapter bad request response
func (o *UpdateAdapterBadRequest) Code() int {
	return 400
}

func (o *UpdateAdapterBadRequest) Error() string {
	return fmt.Sprintf("[PUT /adapter/{adapterId}][%d] updateAdapterBadRequest ", 400)
}

func (o *UpdateAdapterBadRequest) String() string {
	return fmt.Sprintf("[PUT /adapter/{adapterId}][%d] updateAdapterBadRequest ", 400)
}

func (o *UpdateAdapterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAdapterNotFound creates a UpdateAdapterNotFound with default headers values
func NewUpdateAdapterNotFound() *UpdateAdapterNotFound {
	return &UpdateAdapterNotFound{}
}

/*
UpdateAdapterNotFound describes a response with status code 404, with default header values.

Invalid network adapter ID was provided.
*/
type UpdateAdapterNotFound struct {
}

// IsSuccess returns true when this update adapter not found response has a 2xx status code
func (o *UpdateAdapterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update adapter not found response has a 3xx status code
func (o *UpdateAdapterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update adapter not found response has a 4xx status code
func (o *UpdateAdapterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update adapter not found response has a 5xx status code
func (o *UpdateAdapterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update adapter not found response a status code equal to that given
func (o *UpdateAdapterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update adapter not found response
func (o *UpdateAdapterNotFound) Code() int {
	return 404
}

func (o *UpdateAdapterNotFound) Error() string {
	return fmt.Sprintf("[PUT /adapter/{adapterId}][%d] updateAdapterNotFound ", 404)
}

func (o *UpdateAdapterNotFound) String() string {
	return fmt.Sprintf("[PUT /adapter/{adapterId}][%d] updateAdapterNotFound ", 404)
}

func (o *UpdateAdapterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
