// Code generated by go-swagger; DO NOT EDIT.

package kfs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteKFSReader is a Reader for the DeleteKFS structure.
type DeleteKFSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteKFSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteKFSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteKFSNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteKFSConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteKFSInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /kfs/{kfsId}] DeleteKFS", response, response.Code())
	}
}

// NewDeleteKFSOK creates a DeleteKFSOK with default headers values
func NewDeleteKFSOK() *DeleteKFSOK {
	return &DeleteKFSOK{}
}

/*
DeleteKFSOK describes a response with status code 200, with default header values.

The KFS storage volume has been successfully removed.
*/
type DeleteKFSOK struct {
}

// IsSuccess returns true when this delete k f s o k response has a 2xx status code
func (o *DeleteKFSOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete k f s o k response has a 3xx status code
func (o *DeleteKFSOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete k f s o k response has a 4xx status code
func (o *DeleteKFSOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete k f s o k response has a 5xx status code
func (o *DeleteKFSOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete k f s o k response a status code equal to that given
func (o *DeleteKFSOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete k f s o k response
func (o *DeleteKFSOK) Code() int {
	return 200
}

func (o *DeleteKFSOK) Error() string {
	return fmt.Sprintf("[DELETE /kfs/{kfsId}][%d] deleteKFSOK ", 200)
}

func (o *DeleteKFSOK) String() string {
	return fmt.Sprintf("[DELETE /kfs/{kfsId}][%d] deleteKFSOK ", 200)
}

func (o *DeleteKFSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKFSNotFound creates a DeleteKFSNotFound with default headers values
func NewDeleteKFSNotFound() *DeleteKFSNotFound {
	return &DeleteKFSNotFound{}
}

/*
DeleteKFSNotFound describes a response with status code 404, with default header values.

Invalid KFS ID was provided.
*/
type DeleteKFSNotFound struct {
}

// IsSuccess returns true when this delete k f s not found response has a 2xx status code
func (o *DeleteKFSNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete k f s not found response has a 3xx status code
func (o *DeleteKFSNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete k f s not found response has a 4xx status code
func (o *DeleteKFSNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete k f s not found response has a 5xx status code
func (o *DeleteKFSNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete k f s not found response a status code equal to that given
func (o *DeleteKFSNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete k f s not found response
func (o *DeleteKFSNotFound) Code() int {
	return 404
}

func (o *DeleteKFSNotFound) Error() string {
	return fmt.Sprintf("[DELETE /kfs/{kfsId}][%d] deleteKFSNotFound ", 404)
}

func (o *DeleteKFSNotFound) String() string {
	return fmt.Sprintf("[DELETE /kfs/{kfsId}][%d] deleteKFSNotFound ", 404)
}

func (o *DeleteKFSNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKFSConflict creates a DeleteKFSConflict with default headers values
func NewDeleteKFSConflict() *DeleteKFSConflict {
	return &DeleteKFSConflict{}
}

/*
DeleteKFSConflict describes a response with status code 409, with default header values.

The KFS storage volume is not empty or still being referenced.
*/
type DeleteKFSConflict struct {
}

// IsSuccess returns true when this delete k f s conflict response has a 2xx status code
func (o *DeleteKFSConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete k f s conflict response has a 3xx status code
func (o *DeleteKFSConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete k f s conflict response has a 4xx status code
func (o *DeleteKFSConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete k f s conflict response has a 5xx status code
func (o *DeleteKFSConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete k f s conflict response a status code equal to that given
func (o *DeleteKFSConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete k f s conflict response
func (o *DeleteKFSConflict) Code() int {
	return 409
}

func (o *DeleteKFSConflict) Error() string {
	return fmt.Sprintf("[DELETE /kfs/{kfsId}][%d] deleteKFSConflict ", 409)
}

func (o *DeleteKFSConflict) String() string {
	return fmt.Sprintf("[DELETE /kfs/{kfsId}][%d] deleteKFSConflict ", 409)
}

func (o *DeleteKFSConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKFSInternalServerError creates a DeleteKFSInternalServerError with default headers values
func NewDeleteKFSInternalServerError() *DeleteKFSInternalServerError {
	return &DeleteKFSInternalServerError{}
}

/*
DeleteKFSInternalServerError describes a response with status code 500, with default header values.

Unable to delete KFS storage volume.
*/
type DeleteKFSInternalServerError struct {
}

// IsSuccess returns true when this delete k f s internal server error response has a 2xx status code
func (o *DeleteKFSInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete k f s internal server error response has a 3xx status code
func (o *DeleteKFSInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete k f s internal server error response has a 4xx status code
func (o *DeleteKFSInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete k f s internal server error response has a 5xx status code
func (o *DeleteKFSInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete k f s internal server error response a status code equal to that given
func (o *DeleteKFSInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete k f s internal server error response
func (o *DeleteKFSInternalServerError) Code() int {
	return 500
}

func (o *DeleteKFSInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /kfs/{kfsId}][%d] deleteKFSInternalServerError ", 500)
}

func (o *DeleteKFSInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /kfs/{kfsId}][%d] deleteKFSInternalServerError ", 500)
}

func (o *DeleteKFSInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
