// Code generated by go-swagger; DO NOT EDIT.

package kce

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ShutdownKCEReader is a Reader for the ShutdownKCE structure.
type ShutdownKCEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShutdownKCEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShutdownKCEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewShutdownKCENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShutdownKCEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /kce/{kceId}/shutdown] ShutdownKCE", response, response.Code())
	}
}

// NewShutdownKCEOK creates a ShutdownKCEOK with default headers values
func NewShutdownKCEOK() *ShutdownKCEOK {
	return &ShutdownKCEOK{}
}

/*
ShutdownKCEOK describes a response with status code 200, with default header values.

The KCE virtual machine has been shut down successfully.
*/
type ShutdownKCEOK struct {
}

// IsSuccess returns true when this shutdown k c e o k response has a 2xx status code
func (o *ShutdownKCEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this shutdown k c e o k response has a 3xx status code
func (o *ShutdownKCEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this shutdown k c e o k response has a 4xx status code
func (o *ShutdownKCEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this shutdown k c e o k response has a 5xx status code
func (o *ShutdownKCEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this shutdown k c e o k response a status code equal to that given
func (o *ShutdownKCEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the shutdown k c e o k response
func (o *ShutdownKCEOK) Code() int {
	return 200
}

func (o *ShutdownKCEOK) Error() string {
	return fmt.Sprintf("[POST /kce/{kceId}/shutdown][%d] shutdownKCEOK ", 200)
}

func (o *ShutdownKCEOK) String() string {
	return fmt.Sprintf("[POST /kce/{kceId}/shutdown][%d] shutdownKCEOK ", 200)
}

func (o *ShutdownKCEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShutdownKCENotFound creates a ShutdownKCENotFound with default headers values
func NewShutdownKCENotFound() *ShutdownKCENotFound {
	return &ShutdownKCENotFound{}
}

/*
ShutdownKCENotFound describes a response with status code 404, with default header values.

Invalid KCE ID was provided.
*/
type ShutdownKCENotFound struct {
}

// IsSuccess returns true when this shutdown k c e not found response has a 2xx status code
func (o *ShutdownKCENotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this shutdown k c e not found response has a 3xx status code
func (o *ShutdownKCENotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this shutdown k c e not found response has a 4xx status code
func (o *ShutdownKCENotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this shutdown k c e not found response has a 5xx status code
func (o *ShutdownKCENotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this shutdown k c e not found response a status code equal to that given
func (o *ShutdownKCENotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the shutdown k c e not found response
func (o *ShutdownKCENotFound) Code() int {
	return 404
}

func (o *ShutdownKCENotFound) Error() string {
	return fmt.Sprintf("[POST /kce/{kceId}/shutdown][%d] shutdownKCENotFound ", 404)
}

func (o *ShutdownKCENotFound) String() string {
	return fmt.Sprintf("[POST /kce/{kceId}/shutdown][%d] shutdownKCENotFound ", 404)
}

func (o *ShutdownKCENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShutdownKCEInternalServerError creates a ShutdownKCEInternalServerError with default headers values
func NewShutdownKCEInternalServerError() *ShutdownKCEInternalServerError {
	return &ShutdownKCEInternalServerError{}
}

/*
ShutdownKCEInternalServerError describes a response with status code 500, with default header values.

An error occurred when trying to shut down the KCE virtual machine.
*/
type ShutdownKCEInternalServerError struct {
}

// IsSuccess returns true when this shutdown k c e internal server error response has a 2xx status code
func (o *ShutdownKCEInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this shutdown k c e internal server error response has a 3xx status code
func (o *ShutdownKCEInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this shutdown k c e internal server error response has a 4xx status code
func (o *ShutdownKCEInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this shutdown k c e internal server error response has a 5xx status code
func (o *ShutdownKCEInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this shutdown k c e internal server error response a status code equal to that given
func (o *ShutdownKCEInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the shutdown k c e internal server error response
func (o *ShutdownKCEInternalServerError) Code() int {
	return 500
}

func (o *ShutdownKCEInternalServerError) Error() string {
	return fmt.Sprintf("[POST /kce/{kceId}/shutdown][%d] shutdownKCEInternalServerError ", 500)
}

func (o *ShutdownKCEInternalServerError) String() string {
	return fmt.Sprintf("[POST /kce/{kceId}/shutdown][%d] shutdownKCEInternalServerError ", 500)
}

func (o *ShutdownKCEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
