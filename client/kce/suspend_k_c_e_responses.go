// Code generated by go-swagger; DO NOT EDIT.

package kce

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SuspendKCEReader is a Reader for the SuspendKCE structure.
type SuspendKCEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SuspendKCEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSuspendKCEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewSuspendKCENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSuspendKCEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSuspendKCEOK creates a SuspendKCEOK with default headers values
func NewSuspendKCEOK() *SuspendKCEOK {
	return &SuspendKCEOK{}
}

/*
SuspendKCEOK describes a response with status code 200, with default header values.

The KCE virtual machine has been suspended successfully.
*/
type SuspendKCEOK struct {
}

// IsSuccess returns true when this suspend k c e o k response has a 2xx status code
func (o *SuspendKCEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this suspend k c e o k response has a 3xx status code
func (o *SuspendKCEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this suspend k c e o k response has a 4xx status code
func (o *SuspendKCEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this suspend k c e o k response has a 5xx status code
func (o *SuspendKCEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this suspend k c e o k response a status code equal to that given
func (o *SuspendKCEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the suspend k c e o k response
func (o *SuspendKCEOK) Code() int {
	return 200
}

func (o *SuspendKCEOK) Error() string {
	return fmt.Sprintf("[POST /kce/{kceId}/suspend][%d] suspendKCEOK ", 200)
}

func (o *SuspendKCEOK) String() string {
	return fmt.Sprintf("[POST /kce/{kceId}/suspend][%d] suspendKCEOK ", 200)
}

func (o *SuspendKCEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSuspendKCENotFound creates a SuspendKCENotFound with default headers values
func NewSuspendKCENotFound() *SuspendKCENotFound {
	return &SuspendKCENotFound{}
}

/*
SuspendKCENotFound describes a response with status code 404, with default header values.

Invalid KCE ID was provided.
*/
type SuspendKCENotFound struct {
}

// IsSuccess returns true when this suspend k c e not found response has a 2xx status code
func (o *SuspendKCENotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this suspend k c e not found response has a 3xx status code
func (o *SuspendKCENotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this suspend k c e not found response has a 4xx status code
func (o *SuspendKCENotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this suspend k c e not found response has a 5xx status code
func (o *SuspendKCENotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this suspend k c e not found response a status code equal to that given
func (o *SuspendKCENotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the suspend k c e not found response
func (o *SuspendKCENotFound) Code() int {
	return 404
}

func (o *SuspendKCENotFound) Error() string {
	return fmt.Sprintf("[POST /kce/{kceId}/suspend][%d] suspendKCENotFound ", 404)
}

func (o *SuspendKCENotFound) String() string {
	return fmt.Sprintf("[POST /kce/{kceId}/suspend][%d] suspendKCENotFound ", 404)
}

func (o *SuspendKCENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSuspendKCEInternalServerError creates a SuspendKCEInternalServerError with default headers values
func NewSuspendKCEInternalServerError() *SuspendKCEInternalServerError {
	return &SuspendKCEInternalServerError{}
}

/*
SuspendKCEInternalServerError describes a response with status code 500, with default header values.

An error occurred when trying to suspend the KCE virtual machine.
*/
type SuspendKCEInternalServerError struct {
}

// IsSuccess returns true when this suspend k c e internal server error response has a 2xx status code
func (o *SuspendKCEInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this suspend k c e internal server error response has a 3xx status code
func (o *SuspendKCEInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this suspend k c e internal server error response has a 4xx status code
func (o *SuspendKCEInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this suspend k c e internal server error response has a 5xx status code
func (o *SuspendKCEInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this suspend k c e internal server error response a status code equal to that given
func (o *SuspendKCEInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the suspend k c e internal server error response
func (o *SuspendKCEInternalServerError) Code() int {
	return 500
}

func (o *SuspendKCEInternalServerError) Error() string {
	return fmt.Sprintf("[POST /kce/{kceId}/suspend][%d] suspendKCEInternalServerError ", 500)
}

func (o *SuspendKCEInternalServerError) String() string {
	return fmt.Sprintf("[POST /kce/{kceId}/suspend][%d] suspendKCEInternalServerError ", 500)
}

func (o *SuspendKCEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
