// Code generated by go-swagger; DO NOT EDIT.

package template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteTemplateReader is a Reader for the DeleteTemplate structure.
type DeleteTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteTemplateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /template/{templateId}] DeleteTemplate", response, response.Code())
	}
}

// NewDeleteTemplateOK creates a DeleteTemplateOK with default headers values
func NewDeleteTemplateOK() *DeleteTemplateOK {
	return &DeleteTemplateOK{}
}

/*
DeleteTemplateOK describes a response with status code 200, with default header values.

The volume template has been successfully removed.
*/
type DeleteTemplateOK struct {
}

// IsSuccess returns true when this delete template o k response has a 2xx status code
func (o *DeleteTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete template o k response has a 3xx status code
func (o *DeleteTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template o k response has a 4xx status code
func (o *DeleteTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete template o k response has a 5xx status code
func (o *DeleteTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template o k response a status code equal to that given
func (o *DeleteTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete template o k response
func (o *DeleteTemplateOK) Code() int {
	return 200
}

func (o *DeleteTemplateOK) Error() string {
	return fmt.Sprintf("[DELETE /template/{templateId}][%d] deleteTemplateOK ", 200)
}

func (o *DeleteTemplateOK) String() string {
	return fmt.Sprintf("[DELETE /template/{templateId}][%d] deleteTemplateOK ", 200)
}

func (o *DeleteTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTemplateNotFound creates a DeleteTemplateNotFound with default headers values
func NewDeleteTemplateNotFound() *DeleteTemplateNotFound {
	return &DeleteTemplateNotFound{}
}

/*
DeleteTemplateNotFound describes a response with status code 404, with default header values.

Invalid volume template ID was provided.
*/
type DeleteTemplateNotFound struct {
}

// IsSuccess returns true when this delete template not found response has a 2xx status code
func (o *DeleteTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template not found response has a 3xx status code
func (o *DeleteTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template not found response has a 4xx status code
func (o *DeleteTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template not found response has a 5xx status code
func (o *DeleteTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template not found response a status code equal to that given
func (o *DeleteTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete template not found response
func (o *DeleteTemplateNotFound) Code() int {
	return 404
}

func (o *DeleteTemplateNotFound) Error() string {
	return fmt.Sprintf("[DELETE /template/{templateId}][%d] deleteTemplateNotFound ", 404)
}

func (o *DeleteTemplateNotFound) String() string {
	return fmt.Sprintf("[DELETE /template/{templateId}][%d] deleteTemplateNotFound ", 404)
}

func (o *DeleteTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTemplateConflict creates a DeleteTemplateConflict with default headers values
func NewDeleteTemplateConflict() *DeleteTemplateConflict {
	return &DeleteTemplateConflict{}
}

/*
DeleteTemplateConflict describes a response with status code 409, with default header values.

The volume template is not empty or still being referenced.
*/
type DeleteTemplateConflict struct {
}

// IsSuccess returns true when this delete template conflict response has a 2xx status code
func (o *DeleteTemplateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template conflict response has a 3xx status code
func (o *DeleteTemplateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template conflict response has a 4xx status code
func (o *DeleteTemplateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template conflict response has a 5xx status code
func (o *DeleteTemplateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template conflict response a status code equal to that given
func (o *DeleteTemplateConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete template conflict response
func (o *DeleteTemplateConflict) Code() int {
	return 409
}

func (o *DeleteTemplateConflict) Error() string {
	return fmt.Sprintf("[DELETE /template/{templateId}][%d] deleteTemplateConflict ", 409)
}

func (o *DeleteTemplateConflict) String() string {
	return fmt.Sprintf("[DELETE /template/{templateId}][%d] deleteTemplateConflict ", 409)
}

func (o *DeleteTemplateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTemplateInternalServerError creates a DeleteTemplateInternalServerError with default headers values
func NewDeleteTemplateInternalServerError() *DeleteTemplateInternalServerError {
	return &DeleteTemplateInternalServerError{}
}

/*
DeleteTemplateInternalServerError describes a response with status code 500, with default header values.

Unable to delete volume template.
*/
type DeleteTemplateInternalServerError struct {
}

// IsSuccess returns true when this delete template internal server error response has a 2xx status code
func (o *DeleteTemplateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template internal server error response has a 3xx status code
func (o *DeleteTemplateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template internal server error response has a 4xx status code
func (o *DeleteTemplateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete template internal server error response has a 5xx status code
func (o *DeleteTemplateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete template internal server error response a status code equal to that given
func (o *DeleteTemplateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete template internal server error response
func (o *DeleteTemplateInternalServerError) Code() int {
	return 500
}

func (o *DeleteTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /template/{templateId}][%d] deleteTemplateInternalServerError ", 500)
}

func (o *DeleteTemplateInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /template/{templateId}][%d] deleteTemplateInternalServerError ", 500)
}

func (o *DeleteTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
