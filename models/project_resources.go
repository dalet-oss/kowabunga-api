// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectResources The global project quotas (0 for unlimited).
//
// swagger:model ProjectResources
type ProjectResources struct {

	// the maximum number of instances allowed to be spawned.
	Instances uint16 `json:"instances,omitempty"`

	// the maximum total memory (in bytes) allowed to be consumed by sum of all instances.
	Memory uint64 `json:"memory,omitempty"`

	// the maximum total disk capacity allowed to be consumed by sum of all instances.
	Storage uint64 `json:"storage,omitempty"`

	// the maximum total number of vCPUs allowed to be consumed by sum of all instances.
	Vcpus uint16 `json:"vcpus,omitempty"`
}

// Validate validates this project resources
func (m *ProjectResources) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project resources based on context it is used
func (m *ProjectResources) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProjectResources) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProjectResources) UnmarshalBinary(b []byte) error {
	var res ProjectResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
